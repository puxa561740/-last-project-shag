{"version":3,"sources":["common/FormControl/FormControl.js","api/api.js","ReduxStore/reduser/profileReduser/constans/constans.js","ReduxStore/reduser/profileReduser/action/action.js","ReduxStore/reduser/profileReduser/profileReduser.js","ReduxStore/reduser/usersRedusers/constans/constans.js","containers/AuthBlock/AuthBlock.js","ReduxStore/reduser/initialReduser/constans/constans.js","ReduxStore/reduser/initialReduser/initialReduser.js","App.js","ReduxStore/reduser/initialReduser/action/action.js","ReduxStore/reduser/combineRedusers.js","index.js","ReduxStore/reduser/usersRedusers/action/action.js","assets/images/preloader.svg","common/Preloader/Preloader.js","utilit/validators/validators.js","ReduxStore/reduser/authReduser/authReduser.js","ReduxStore/reduser/postReduser/userPostsReduser/constans/constans.js","ReduxStore/reduser/postReduser/userPostsReduser/postReduser.js","ReduxStore/reduser/postReduser/userPostsReduser/action/action.js","ReduxStore/reduser/authReduser/actions/actions.js","ReduxStore/reduser/authReduser/constans/constans.js","ReduxStore/reduser/dialogReduser/constans/constans.js","ReduxStore/reduser/dialogReduser/action/action.js","ReduxStore/reduser/dialogReduser/dialogReduser.js","utilit/object-helpers.js","ReduxStore/reduser/usersRedusers/usersRedusers.jsx","components/Dialogs/UserDialogItems/Masseges/Messeges.js","components/Dialogs/UserDialogItems/UserDialogItems.js","components/Dialogs/UserDialogItems/Masseges/MassegeForm/MassegeForm.js","components/Dialogs/UserDialogItems/Masseges/MesegesContainer.js","components/Dialogs/Dialogs.js","assets/images/user.png","components/Logout/Logout.js","components/Header/Header.js","components/NavBlock/NavBlock.js","components/Profile/MyPostContainer/Post.js","components/Profile/MyPostContainer/MyPosts.js","components/Profile/MyPostContainer/MyPostsContainer.js","components/Profile/ProfileDataForm/ProfileDataForm.js","components/Profile/ProfileStatus/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","common/Paginator/Paginator.jsx","components/Users/User/User.js","components/Users/Users.js","Selectors/usersSelectors.js","components/Users/UsersContainer/UsersContainer.js","components/Body/Body.js"],"names":["FormControl","input","meta","touched","error","children","hasError","className","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","DELETE_PROFILE","SET_MY_PROFILE","setUserProfile","type","setMyProfile","setStatus","defaultState","myProfile","getUserProfile","myId","dispatch","a","resultCode","console","log","file","photos","getState","auth","stopSubmit","_error","messages","Promise","reject","deleteProfile","profileReduser","state","action","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","LoginReduxForm","reduxForm","require","form","handleSubmit","captchaUrl","useSelector","isAuth","onSubmit","required","src","alt","S","Main","styled","div","connect","path","render","INITIALIZED_SUCCESS","initialized","globalError","initializedReduser","Login","default","Wrapper","compose","withRouter","initializeApp","promise","getAuthUserData_","all","isInitializ","useEffect","exact","to","Body","Preloader","reducers","combineReducers","authReduser","formReducer","dialog","dialogReduser","users","usersReduser","userPosts","userPostReduser","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","store","document","getElementById","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","totalUsersCount","count","toggleIsFetching","isFetching","toggleFollowingProgress","style","backgroundColor","preloader","value","maxLengthCreator","maxLength","length","loginIn","logout_","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","payload","ADD_POST","DELETE_POST","ADD_LIKE","ADD_DISLIKE","id","message","likesCount","disLikesCount","addPost","newPostText","addPostActionCreator","deletePost","postId","deletePostActionCreator","addDislike","addDislikeActionCreator","addLike","addLikeActionCreator","newPost","filter","p","map","obj","setAuthUserData","url","getCaptchaUrlSuccess","SEND_MESSAGE","GET_DIAlOG","DELETE_DIALOG","UPDATE_DIALOG","getUserDialog","updateDialog","actualDial","activeUserDialog","dialogs","masseges","massege","getDialog","actualD","deleteUserDial","sendNewMeseg","newMessage","sendMeseges","actualDi","dial","updateObjectInArray","items","itemId","objPropName","newObjProps","u","followingInProgress","fake","requestUsers","page","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed","Messeges","messeg","UserDialog","onClick","dialogMesseges","maxLength50","Field","MessegesContainer","values","newMessageBody","Dialogs","dialogsElements","mes","Logout","profileImg","small","user","Header","NavBlock","images","large","userPhoto","disLikeCount","match","params","maxLength10","AddNewPostFormRedux","MyPosts","React","memo","postsElements","reverse","Post","ProfileDataFormReduxForm","Object","keys","contacts","key","ProfileStatus","useState","editMode","setEditMode","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileContainer","Porfile","ProfileInfo","UserImg","img","target","files","initialValues","Profile","authorizedUserId","history","push","refreshProfile","Swrapper","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","User","disabled","some","Users","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","pageNumber","Switch","Route","Redirect","location","pathname"],"mappings":"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","file":"static/js/main.df4c97b5.chunk.js","sourcesContent":["import {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={ error+ \" \" + (hasError ? error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <div className={error}><span>{error}</span></div>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    \r\n    const {input, meta, child, ...restProps} = props;\r\n    \r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\", className=null) => (\r\n    <div className={className}>\r\n        <Field placeholder={placeholder} \r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> <span>{text}</span>\r\n    </div>\r\n);","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"60e06d6c-846e-4070-ad8b-1afdb6af21fe\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) { \r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile );\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n};\r\n\r\n\r\n","export const SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nexport const SET_STATUS = 'SET_STATUS';\r\nexport const SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nexport const DELETE_PROFILE= 'DELETE_PROFILE';\r\nexport const SET_MY_PROFILE= 'SET_MY_PROFILE';\r\n","import { DELETE_PROFILE, SAVE_PHOTO_SUCCESS, SET_MY_PROFILE, SET_STATUS, SET_USER_PROFILE } from \"../constans/constans\"\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setMyProfile = (profile) => ({type: SET_MY_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\nexport const deleteProfiles = () =>({type: DELETE_PROFILE});","import { stopSubmit } from \"redux-form\";\r\nimport { profileAPI, usersAPI } from \"../../../api/api\";\r\nimport { savePhotoSuccess, setStatus, setUserProfile,deleteProfiles, setMyProfile } from \"./action/action\";\r\nimport {  DELETE_PROFILE, SAVE_PHOTO_SUCCESS, SET_MY_PROFILE, SET_STATUS, SET_USER_PROFILE } from \"./constans/constans\";\r\n\r\nconst defaultState={\r\n  profile: null,\r\n  status: \"\",\r\n  myProfile: null,\r\n};\r\n\r\nconst profileReduser = (state=defaultState, action)=>{\r\n  switch (action.type) {\r\n    case SET_MY_PROFILE:\r\n    return {\r\n      ...state,\r\n      myProfile: action.profile\r\n    }\r\n    case SET_STATUS: \r\n        return {\r\n            ...state,\r\n            status: action.status\r\n        }\r\n\r\n    case SET_USER_PROFILE:\r\n        return {...state, profile: action.profile};\r\n\r\n    case SAVE_PHOTO_SUCCESS: \r\n        return {...state, profile: {...state.profile, photos: action.photos }};\r\n\r\n    case DELETE_PROFILE:\r\n      return{\r\n        ...state,\r\n        profile: null,\r\n        status: \"\",\r\n        myProfile: null\r\n      }\r\n    default:\r\n        return state;\r\n  }\r\n};\r\n\r\nexport const getUserProfile = (userId, myId=null) => async (dispatch) => {\r\n  if(myId){\r\n    const response = await usersAPI.getProfile(myId);\r\n    dispatch(setMyProfile(response.data))\r\n  };\r\n  if(userId){\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data))\r\n  };\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(response.data||''));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  try {\r\n      let response = await profileAPI.updateStatus(status);\r\n      if (response.data.resultCode === 0) {\r\n          dispatch(setStatus(status));\r\n      }\r\n      \r\n  } catch(error) {\r\n    console.log('ERROR')\r\n  }\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n  let response = await profileAPI.savePhoto(file);\r\n\r\n  if (response.data.resultCode === 0) {\r\n      dispatch(savePhotoSuccess(response.data.data.photos));\r\n  }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n  const userId = getState().auth.userId;\r\n  const response = await profileAPI.saveProfile(profile);\r\n\r\n  if (response.data.resultCode === 0) {\r\n      dispatch(getUserProfile(userId));\r\n  } else {\r\n      dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n      return Promise.reject(response.data.messages[0]);\r\n  }\r\n};\r\n\r\nexport const deleteProfile = ()=>(dispatch)=>{\r\n  return dispatch(deleteProfiles())};\r\n\r\nexport default profileReduser;","export const FOLLOW = 'FOLLOW';\r\nexport const UNFOLLOW = 'UNFOLLOW';\r\nexport const SET_USERS = 'SET_USERS';\r\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nexport const SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nexport const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';","import { connect, useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { createField, Input } from \"../../common/FormControl/FormControl\";\r\nimport Body from \"../../components/Body/Body\";\r\nimport {login} from '../../ReduxStore/reduser/authReduser/authReduser';\r\nimport { required } from \"../../utilit/validators/validators\";\r\nconst {  reduxForm } = require(\"redux-form\");\r\n\r\n\r\nconst AuthBlock = ({handleSubmit, error, captchaUrl}) => {\r\n  const auth = useSelector(state=>state.auth.isAuth);\r\n  if (auth) {\r\n    <Redirect to='/'/>\r\n  }\r\n\r\n\r\n  return (\r\n      <form onSubmit={handleSubmit}>\r\n          {createField(\"Email\", \"email\", [required], Input)}\r\n          {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n          {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"Remember me.\", 'checkbox')}\r\n\r\n          { captchaUrl && <img src={captchaUrl} alt=''/>}\r\n          { captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n\r\n\r\n          {error && <div >\r\n              {error}\r\n          </div>\r\n          }\r\n          <div>\r\n              <button>Login in</button>\r\n          </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(AuthBlock);\r\n\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n  }\r\n\r\n  if (props.isAuth) {\r\n      return <Route path='/' render={()=><Body/>}/>\r\n  }\r\n\r\n  return <S.Main>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n  </S.Main>\r\n}\r\n\r\nconst mapStateToprops=(state)=>({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl,\r\n});\r\n\r\n\r\nconst S ={\r\n  Main: styled.div`\r\n  display: flex;\r\n  flex-direction:column;\r\n  width: 100%;\r\n  min-width: 300px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 99vh;\r\n  background-color: #21EBE7;\r\n  div {\r\n    text-align: center; \r\n  }\r\n  input::placeholder {\r\n    text-align: center;\r\n  }\r\n  input {\r\n    width: 60%;\r\n    min-width: 280px;\r\n    border-radius: 20px;\r\n    margin: 10px;\r\n    outline: none;\r\n  }\r\n  span {\r\n    color: black;\r\n    font-size: large;\r\n    \r\n  }\r\n  h1 {\r\n    color: #fff;\r\n  }\r\n  .checkbox {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 50px;\r\n    text-align: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position:relative; \r\n    span {\r\n          width: 50%;\r\n          position: absolute;\r\n          left: 0;\r\n          z-index: 0;\r\n        }\r\n    div{\r\n      width: 100%;\r\n      div{\r\n        input {\r\n          top: 30%;\r\n          left: 0;\r\n          position:absolute;\r\n          margin: 0;\r\n          padding: 0;\r\n          width: 100%;\r\n          height: 20px;\r\n          cursor: pointer;\r\n          z-index: 10;\r\n          }\r\n      }\r\n    }\r\n  }\r\n  button {\r\n    text-decoration: none;\r\n    outline: none;\r\n    display: inline-block;\r\n    width: 140px;\r\n    height: 45px;\r\n    line-height: 45px;\r\n    border-radius: 45px;\r\n    margin: 10px 20px;\r\n    font-family: 'Montserrat', sans-serif;\r\n    font-size: 11px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    letter-spacing: 3px;\r\n    font-weight: 600;\r\n    color: #524f4e;\r\n    background: white;\r\n    box-shadow: 0 8px 15px rgba(0,0,0,.1);\r\n    transition: .3s;\r\n    }\r\n    button:hover {\r\n      background: #2EE59D;\r\n      box-shadow: 0 15px 20px rgba(70,212,59,.4);\r\n      color: white;\r\n      transform: translateY(-7px);\r\n    }\r\n  `\r\n}\r\n\r\n\r\nexport default connect(mapStateToprops, {login})(Login);","export const INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';","import { getAuthUserData_ } from \"../authReduser/actions/actions\";\r\nimport { initializedSuccess } from \"./action/action\";\r\nimport { INITIALIZED_SUCCESS } from \"./constans/constans\";\r\n\r\nconst defaultState ={\r\n  initialized: false,\r\n  globalError: null\r\n};\r\n\r\nconst initializedReduser=(state=defaultState, action)=>{\r\n  switch(action.type){\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializeApp = () => {\r\n  return (dispatch) => {\r\n    let promise = dispatch(getAuthUserData_());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n        \r\n}}\r\n\r\nexport default initializedReduser;","import { useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport Preloader from \"./common/Preloader/Preloader\";\nimport Body from \"./components/Body/Body\";\nimport {deleteProfile} from './ReduxStore/reduser/profileReduser/profileReduser';\nimport {getUserProfile} from './ReduxStore/reduser/profileReduser/profileReduser';\nimport { initializeApp } from \"./ReduxStore/reduser/initialReduser/initialReduser\";\nimport styled from \"styled-components\";\nconst { default: Login } = require(\"./containers/AuthBlock/AuthBlock\");\n\n\nconst  LastStepShag = ({getUserProfile, deleteProfile, initializeApp}) =>{\n\nconst isAuth= useSelector(state=>state.auth.isAuth);\nconst userId= useSelector(state=>state.auth.userId);\nconst isInitializ = useSelector(state=>state.initialized.initialized);\n\n  useEffect(()=>{\n    initializeApp();\n  },[]);\n\n  if(!isAuth){\n    deleteProfile();\n  }\n\n  const isInit =()=>{\n    getUserProfile(null,userId);\n    if(!isInitializ){\n      return <Preloader/>\n    }\n    \n    return isAuth ? (getUserProfile(userId), <Route exact to='/' render={()=><Body/>}/>): <Login/> \n  };\n\n  return (\n    <S.Wrapper >\n        {isInit()}\n    </S.Wrapper>\n  );\n}\n\nconst S = {\n  Wrapper: styled.div`\n  background-color: #21EBE7;\n  `\n}\n\nexport default compose(withRouter, connect(null,{initializeApp, getUserProfile, deleteProfile}))(LastStepShag);\n","import { INITIALIZED_SUCCESS } from \"../constans/constans\";\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});","import thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport  { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport dialogReduser from \"./dialogReduser/dialogReduser\";\r\nimport initializedReduser from \"./initialReduser/initialReduser\";\r\nimport profileReduser from \"./profileReduser/profileReduser\";\r\nimport usersReduser from \"./usersRedusers/usersRedusers\";\r\nimport userPostReduser from \"./postReduser/userPostsReduser/postReduser\";\r\nimport authReduser from \"./authReduser/authReduser\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReduser,\r\n  form: formReducer,\r\n  dialog: dialogReduser,\r\n  initialized: initializedReduser,\r\n  profile: profileReduser,\r\n  users: usersReduser,\r\n  userPosts: userPostReduser,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst state = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default state;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport LastStepShag from './App';\nimport state from './ReduxStore/reduser/combineRedusers';\n\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={state}>\n      <LastStepShag />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n","import { FOLLOW, SET_CURRENT_PAGE, SET_TOTAL_USERS_COUNT, SET_USERS, TOGGLE_IS_FETCHING, TOGGLE_IS_FOLLOWING_PROGRESS, UNFOLLOW } from \"../constans/constans\"\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})","export default __webpack_public_path__ + \"static/media/preloader.ea356991.svg\";","import preloader from \"../../assets/images/preloader.svg\";\n\nlet Preloader = () => {\n    return <div  style={ { backgroundColor: 'white' } }>\n        <img src={preloader} />\n    </div>\n}\n\nexport default Preloader;","export const required = value => {\n    if (value) return undefined;\n\n    return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","import { getAuthUserData_, loginIn, logout_ } from \"./actions/actions\";\r\nimport { GET_CAPTCHA_URL_SUCCESS, SET_USER_DATA } from \"./constans/constans\";\r\n\r\nconst defaultState={\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaUrl: null,\r\n}\r\n\r\nconst authReduser =(state = defaultState, action)=>{\r\n  switch(action.type){\r\n    case SET_USER_DATA:\r\n    case GET_CAPTCHA_URL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getAuthUserData = getAuthUserData_;\r\nexport const login = loginIn;\r\nexport const logout = logout_;\r\n\r\nexport default authReduser;\r\n","export const ADD_POST = 'ADD_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_LIKE = 'ADD_LIKE';\r\nexport const DELETE_LIKE = 'DELETE_LIKE';\r\nexport const ADD_DISLIKE = 'ADD_DISLIKE';\r\nexport const DELETE_DISLIKE = 'DELETE_DISLIKE';\r\n","import { addDislikeActionCreator, addLikeActionCreator, addPostActionCreator, deleteDislikeActionCreator, deleteLikeActionCreator, deletePostActionCreator } from \"./action/action\";\r\nimport { ADD_DISLIKE, ADD_LIKE, ADD_POST, DELETE_POST } from \"./constans/constans\";\r\n\r\nconst defaultState={\r\n  userPosts: [\r\n    {userId: 13106, id: 1, message: 'Hi, how are you?', likesCount: 12, disLikesCount: 0},\r\n    {userId: 13106, id: 2, message: 'It\\'s my first post', likesCount: 11, disLikesCount: 0},\r\n    {userId: 13106, id: 3, message: 'Blabla', likesCount: 11, disLikesCount: 0},\r\n    {userId: 13106, id: 4, message: 'Dada', likesCount: 11, disLikesCount: 0}    \r\n  ],\r\n  userId: 13106,\r\n};\r\n\r\nconst userPostReduser = (state=defaultState, action)=>{\r\n  switch(action.type){\r\n    case ADD_POST: \r\n    let id = state.userPosts.length+1||1;\r\n      let newPost = {\r\n          userId: state.userId,\r\n          id: id,\r\n          message: action.newPostText,\r\n          likesCount: 0, \r\n          disLikesCount: 0\r\n      };\r\n      return {\r\n          ...state,\r\n          userPosts: [...state.userPosts, newPost],\r\n          newPostText: ''\r\n      };\r\n  case DELETE_POST:\r\n    return {...state, userPosts: state.userPosts.filter(p => p.id !== action.postId)};\r\n\r\n  case ADD_LIKE:\r\n    return {...state, userPosts: state.userPosts.map( obj => {\r\n      if(obj.id===action.id){\r\n        return {...obj, likesCount: obj.likesCount+1} \r\n      }\r\n      return obj\r\n    })}\r\n    case ADD_DISLIKE:\r\n      return {...state, userPosts: state.userPosts.map( obj => {\r\n        if(obj.id===action.id){\r\n          return {...obj, disLikesCount: obj.disLikesCount+1} \r\n        }\r\n        return obj\r\n      })}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPost =(newPostText) => (dispatch) => { \r\n  dispatch(addPostActionCreator(newPostText))};\r\n\r\n export const deletePost=(postId) => (dispatch) => { \r\n  dispatch(deletePostActionCreator(postId))};\r\n\r\nexport const addDislike = (userId, id)=> dispatch => {\r\n  dispatch(addDislikeActionCreator(userId, id));\r\n};\r\n\r\nexport const addLike = (userId, id)=> dispatch => {\r\n  dispatch(addLikeActionCreator(userId, id));\r\n};\r\n\r\nexport const deleteLike = (userId, id)=>dispatch =>{\r\n  dispatch(deleteLikeActionCreator(userId, id));\r\n};\r\n\r\nexport const deleteDislike = (userId, id)=>dispatch=>{\r\n  dispatch(deleteDislikeActionCreator(userId, id));\r\n};\r\n\r\nexport default userPostReduser;","import { ADD_DISLIKE, ADD_LIKE, ADD_POST, DELETE_DISLIKE, DELETE_LIKE, DELETE_POST } from \"../constans/constans\";\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const deletePostActionCreator = (postId) => ({type: DELETE_POST, postId});\r\nexport const addLikeActionCreator = (userId, id)=>({type: ADD_LIKE,userId,id});\r\nexport const deleteLikeActionCreator = (userId, id)=>({type: DELETE_LIKE,userId,id});\r\nexport const addDislikeActionCreator = (userId, id)=>({type: ADD_DISLIKE,userId,id});\r\nexport const deleteDislikeActionCreator = (userId, id)=>({type: DELETE_DISLIKE,userId,id});","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI, securityAPI } from \"../../../../api/api\";\r\nimport { GET_CAPTCHA_URL_SUCCESS, SET_USER_DATA } from \"../constans/constans\";\r\n\r\nexport const loginIn =(email, password, rememberMe, captcha) => {\r\n  return async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe, captcha);\r\n  if (response.data.resultCode === 0) {\r\n      dispatch(getAuthUserData_())\r\n  } else {\r\n    if (response.data.resultCode === 10) {\r\n        dispatch(getCaptchaUrl());\r\n    }}\r\n      let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n      dispatch(stopSubmit(\"login\", {_error: message}));\r\n  };\r\n}\r\n\r\n  export const getAuthUserData_ = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA, payload:\r\n      {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n  const response = await securityAPI.getCaptchaUrl();\r\n  const captchaUrl = response.data.url;\r\n  dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n  type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n});\r\n\r\nexport const logout_ = () => async (dispatch) => {\r\n  let response = await authAPI.logout();\r\n  if (response.data.resultCode === 0) {\r\n      dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};","export const SET_USER_DATA = 'SET_USER_DATA';\r\nexport const GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n","export const SEND_MESSAGE = 'SEND_MESSAGE';\r\nexport const GET_DIAlOG = 'GET_DIAlOG';\r\nexport const DELETE_DIALOG = 'DELETE_DIALOG';\r\nexport const UPDATE_DIALOG = 'UPDATE_DIALOG';","import { GET_DIAlOG, DELETE_DIALOG, SEND_MESSAGE, UPDATE_DIALOG } from \"../constans/constans\";\r\n\r\nexport const getUserDialog = (userId) =>({type: GET_DIAlOG, userId});\r\nexport const deleteUserDialog = () =>({type: DELETE_DIALOG});\r\nexport const sendMeseges = (newMessage)=>({type: SEND_MESSAGE, newMessage});\r\nexport const updateDialog = (actualDial) => ({type: UPDATE_DIALOG,actualDial})","import { GET_DIAlOG, SEND_MESSAGE, DELETE_DIALOG, UPDATE_DIALOG } from \"./constans/constans\";\r\nimport {deleteUserDialog, getUserDialog, sendMeseges, updateDialog} from './action/action';\r\n\r\nconst defaultState={\r\nactiveUserDialog: [],\r\ndialogs: [\r\n  {userId: 1, name: 'Yra', masseges: [\r\n    {id: 1, massege: 'Hi Guru' },\r\n    {id: 2, massege: 'Y am GURU' },\r\n    {id: 3, massege: 'Your 12' },\r\n    {id: 4, massege: 'Tehno 1' }\r\n    ]\r\n  },\r\n  {userId: 2, name: 'Helen', masseges: [\r\n    {id: 1, massege: 'Hi 1' },\r\n    {id: 2, massege: 'Y am Genza' },\r\n    {id: 3, massege: 'Your 5' },\r\n    {id: 4, massege: 'Tehno 9' },\r\n  ]\r\n},\r\n  {userId: 3, name: 'Genadiy', masseges: [\r\n    {id: 1, massege: 'Hi 20' },\r\n    {id: 2, massege: 'Y am Gearsim' },\r\n    {id: 3, massege: 'Your 33' },\r\n    {id: 4, massege: 'Tehno 44' },\r\n  ]\r\n},\r\n  {userId: 4, name: 'Gerasim', masseges: [\r\n    {id: 1, massege: 'Hi dfj' },\r\n    {id: 2, massege: 'Y am Lida' },\r\n    {id: 3, massege: 'Your kypuko' },\r\n    {id: 4, massege: 'Tehno jbnfjk' },\r\n  ]\r\n  },\r\n],\r\n};\r\n\r\nconst dialogReduser=(state = defaultState, action)=>{\r\n  switch (action.type) {\r\n    case DELETE_DIALOG:\r\n      return {\r\n          ...state,\r\n          activeUserDialog: []\r\n      };\r\n    case SEND_MESSAGE: \r\n      return {\r\n        ...state,\r\n        activeUserDialog:[{...state.activeUserDialog[0], masseges: [...state.activeUserDialog[0].masseges, {id:(state.activeUserDialog[0].masseges.length+1), massege: action.newMessage}]}]\r\n      };\r\n    case UPDATE_DIALOG:\r\n      return {\r\n        ...state,\r\n        dialogs: [...state.dialogs.map((actualDi)=> {\r\n          if (actualDi.userId !== action.actualDial.userId) {\r\n            return actualDi\r\n          } else{\r\n            return action.actualDial\r\n          }\r\n        })]\r\n      }\r\n      case GET_DIAlOG:\r\n        return {\r\n          ...state,\r\n          activeUserDialog: state.dialogs.filter(dial=>{\r\n             if(dial.userId===action.userId){\r\n               return dial\r\n             }\r\n          })\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getDialog = (userId, actualD=null)=>(dispatch)=>{\r\n  if (actualD) {\r\n    \r\n    return (dispatch(updateDialog(actualD)), dispatch(getUserDialog(userId)));\r\n  }\r\n  return dispatch(getUserDialog(userId));\r\n};\r\nexport const deleteUserDial = ()=>(dispatch)=>{\r\n  return dispatch(deleteUserDialog());\r\n};\r\nexport const sendNewMeseg = (newMessage)=>(dispatch)=>{\r\n  return dispatch(sendMeseges(newMessage));\r\n};\r\nexport const updateDial = (actualD)=>(dispatch)=>{\r\n  return \r\n};\r\n\r\nexport default dialogReduser;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import { usersAPI } from \"../../../api/api\";\r\nimport { followSuccess, setCurrentPage, setTotalUsersCount, setUsers, toggleFollowingProgress, toggleIsFetching, unfollowSuccess } from \"./action/action\";\r\nimport { FOLLOW, SET_CURRENT_PAGE, SET_TOTAL_USERS_COUNT, SET_USERS, TOGGLE_IS_FETCHING, TOGGLE_IS_FOLLOWING_PROGRESS, UNFOLLOW } from \"./constans/constans\";\r\nimport {updateObjectInArray} from '../../../utilit/object-helpers';\r\n\r\nconst defaultState = {\r\n  users: [],\r\n  pageSize: 9,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: [],\r\n  fake: 9\r\n};\r\n\r\n\r\nconst usersReduser=(state=defaultState,action)=>{\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n        return {\r\n            ...state,\r\n            users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n        }\r\n    case UNFOLLOW:\r\n        return {\r\n            ...state,\r\n            users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n        }\r\n    case SET_USERS: {\r\n        return {...state, users: action.users}\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n        return {...state, currentPage: action.currentPage}\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n        return {...state, totalUsersCount: action.count}\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n        return {...state, isFetching: action.isFetching}\r\n    }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n        return {\r\n            ...state,\r\n            followingInProgress: action.isFetching\r\n                ? [...state.followingInProgress, action.userId]\r\n                : state.followingInProgress.filter(id => id !== action.userId)\r\n        }\r\n    }\r\n    default:\r\n        return state;\r\n}\r\n};\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n  return async (dispatch) => {\r\n      dispatch(toggleIsFetching(true));\r\n      dispatch(setCurrentPage(page));\r\n\r\n      let data = await usersAPI.getUsers(page, pageSize);\r\n      dispatch(toggleIsFetching(false));\r\n      dispatch(setUsers(data.items));\r\n      dispatch(setTotalUsersCount(data.totalCount));\r\n  }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  let response = await apiMethod(userId);\r\n\r\n  if (response.data.resultCode === 0) {\r\n      dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n;\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n      followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n  }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n      followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n  }\r\n};\r\n\r\nexport default usersReduser;","import styled from \"styled-components\";\r\n\r\nconst Messeges = (props)=>{\r\n\r\n  return <S.Wrapper>\r\n      <span>{props.messeg}</span>\r\n    </S.Wrapper>\r\n};\r\n\r\nconst S = {\r\n  Wrapper: styled.div`\r\n  text-align: left;\r\n  font-size: large;\r\n  margin: 10px;\r\n  @media screen and (max-width: 600px) {\r\n          font-size: 12px;\r\n          margin: 3px;\r\n        }\r\n  `\r\n}\r\nexport default Messeges;","import { NavLink } from \"react-router-dom\"\r\nimport styled from \"styled-components\";\r\n\r\nconst UserDialog = (props)=>{\r\nconst path = '/dialogs/' + props.userId;\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <div className='navlink-dialog'>\r\n        <NavLink to={path} onClick={()=>{\r\n            props.getDialog(props.userId, props.dialogMesseges[0])\r\n        }}><span>{props.name}</span></NavLink>\r\n      </div>\r\n    </S.Wrapper>\r\n  )\r\n};\r\n\r\nconst S ={\r\n  Wrapper: styled.div`\r\n  text-align: center;\r\n  margin: 0 10px;\r\n  max-width: 80%;\r\n  \r\n    margin-top: 15px;\r\n    .navlink-dialog {\r\n      text-align: center;\r\n      width: 100%;\r\n      a {\r\n        text-decoration: none;\r\n        outline: none;\r\n        display: inline-block;\r\n        border-radius: 30px;\r\n        padding: 0 10px;\r\n        background-image: linear-gradient(45deg, #6ab1d7 0%, #33d9de 50%, #002878 100%);\r\n        background-position: 100% 0;\r\n        background-size: 200% 200%;\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-size: 24px;\r\n        @media screen and (max-width: 600px) {\r\n          font-size: 12px;\r\n        }\r\n        font-weight: 300;\r\n        color: white;\r\n        box-shadow: 0 16px 32px 0 rgba(0,40,120,.35);\r\n        transition: .5s;\r\n      }\r\n      a:hover {\r\n        box-shadow: 0 0 0 0 rgba(0,40,120,0);\r\n        background-position: 0 0;\r\n      }\r\n    }\r\n  `\r\n}\r\n\r\nexport default UserDialog;","import { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../../../../common/FormControl/FormControl\";\r\nimport { maxLengthCreator, required } from \"../../../../../utilit/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst MessegForm =(props)=>{\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       placeholder='Enter your message' name=\"newMessageBody\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n    </form>\r\n  )\r\n};\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(MessegForm)","import { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport MessegForm from \"./MassegeForm/MassegeForm\";\r\n\r\n\r\nconst MessegesContainer = (props)=>{\r\n\r\n  const dialogMesseges = useSelector(state=>state.dialog.activeUserDialog)\r\n \r\n  const addNewMessage = (values) => {\r\n    props.sendNewMeseg(values.newMessageBody);\r\n}\r\n  \r\n\r\n  return (\r\n    <>\r\n      {dialogMesseges.length?<MessegForm onSubmit={addNewMessage}/>: null}\r\n      {props.dial}\r\n    </>\r\n  )\r\n};\r\n\r\nconst S = {\r\n  Wrapper: styled.div`\r\n   & a {\r\n     \r\n   }\r\n  `\r\n}\r\n\r\nexport default MessegesContainer;","import { connect, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Messeges from \"./UserDialogItems/Masseges/Messeges\";\r\nimport UserDialog from \"./UserDialogItems/UserDialogItems\";\r\nimport { getDialog, deleteUserDial, sendNewMeseg} from \"../../ReduxStore/reduser/dialogReduser/dialogReduser\";\r\nimport { useEffect} from \"react\";\r\nimport MessegesContainer from \"./UserDialogItems/Masseges/MesegesContainer\";\r\n\r\nconst Dialogs =(props)=>{\r\n\r\n\r\n  const dialog = useSelector(state=> state.dialog);\r\n  const dialogMesseges = useSelector(state=>state.dialog.activeUserDialog)\r\n\r\n  const dialogsElements = dialog.dialogs.map(dial=>(<UserDialog \r\n    name={dial.name}\r\n    userId={dial.userId}\r\n    key={dial.userId}\r\n    getDialog={props.getDialog}\r\n    dialogMesseges={dialogMesseges}\r\n  />))\r\n\r\n  let dial\r\n  \r\n  if (dialogMesseges.length) {\r\n    dial = dialogMesseges[0].masseges.map(mes=>{\r\n      return (<Messeges key={mes.id} messeg={mes.massege}/>)})\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    return props.deleteUserDial();\r\n  }, [])\r\n  \r\n\r\n  return(\r\n    <S.Dialogs>\r\n      <div className='dialog-user'>\r\n        <div>{dialogsElements}</div>\r\n      </div>\r\n      <div className='dialog-massege'>\r\n        <MessegesContainer sendNewMeseg={props.sendNewMeseg} dial={dial}/>\r\n      </div>\r\n    </S.Dialogs>\r\n  )\r\n};\r\n\r\nconst S ={\r\n  Dialogs: styled.div`\r\n  background-color: #fff;\r\n  width:100%;\r\n  display:flex;\r\n  justify-content: center;\r\n  @media screen and (max-width: 650px){\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n  }\r\n  .dialog-user,\r\n  .dialog-massege {\r\n    border-radius: 30px;\r\n    margin: 10px;\r\n    padding: 10px 0 0 0;\r\n    > form {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      > div {\r\n        margin-top: 10px;\r\n        width:95%;\r\n        > button {\r\n          text-decoration: none;\r\n          display: inline-block;\r\n          padding: 6px 50px;\r\n          margin: 20px 10px;\r\n          border-radius: 10px;\r\n          box-shadow: 0 0 40px 40px #F137A6 inset, 0 0 0 0 #F137A6;\r\n          font-family: 'Montserrat', sans-serif;\r\n          font-weight: bold;\r\n          letter-spacing: 2px;\r\n          color: white;\r\n          transition: .15s ease-in-out;\r\n        }\r\n        > button:hover {\r\n          box-shadow: 0 0 10px 0 #F137A6 inset, 0 0 10px 4px #F137A6;\r\n          color: #F137A6;\r\n        }\r\n        > div {\r\n          width: 90%; \r\n          >div {\r\n            width: 100%; \r\n            > textarea {\r\n            width: 100%;\r\n            resize: none;\r\n            height: 100px;\r\n            border-radius: 20px;\r\n            outline: none;\r\n            padding: 10px;\r\n          }\r\n          > textarea::placeholder {\r\n            text-align: center;\r\n            padding-top: 20px;\r\n          }\r\n          }\r\n          \r\n        }\r\n      }\r\n    }\r\n    & div {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n  }\r\n  .dialog-user {\r\n    width: 40%;\r\n    background-color: #C9FCFF;\r\n    @media screen and (max-width: 650px){\r\n    width: 90%;\r\n    padding: 7px;\r\n    > div {\r\n      display:flex;\r\n      flex-direction: row;\r\n      flex-wrap: wrap;\r\n      justify-content: space-around;\r\n      > div {\r\n        margin: 5px;\r\n      }\r\n    }\r\n  }\r\n\r\n  }\r\n  .dialog-massege {\r\n    width: 50%;\r\n    background-color: #C9FCFF;\r\n    @media screen and (max-width: 650px){\r\n    width: 98%;\r\n    height: 50vh;\r\n  }\r\n  } \r\n  `\r\n}\r\n\r\nexport default connect(null, {getDialog, deleteUserDial, sendNewMeseg})(Dialogs);","export default __webpack_public_path__ + \"static/media/user.96e310a6.png\";","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport user from '../../assets/images/user.png'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\nconst Logout=(props)=>{\r\n\r\n  const isAuth=useSelector(state=>state.auth.isAuth);\r\n  const login=useSelector(state=>state.auth.login);\r\n  let profileImg = useSelector(state=>state.profile.myProfile);\r\n  \r\n useEffect(()=>{\r\n }, [isAuth,profileImg])\r\n\r\nif(!profileImg){\r\n  profileImg = <Preloader/> \r\n} else{\r\n  profileImg = <img src={profileImg.photos.small||user} alt='user img'/> \r\n}\r\n\r\n if(isAuth) {\r\n   return (\r\n    <S.Logout>\r\n      <div>\r\n        <span>{login}</span>\r\n            {profileImg}\r\n        <button onClick={props.logout}>Log out</button> \r\n        </div>\r\n              \r\n  </S.Logout>\r\n   )\r\n } \r\n  return (\r\n    <S.Logout>\r\n      <Redirect to='/login'/>\r\n    </S.Logout>\r\n  )\r\n};\r\n\r\nconst S ={\r\n  Logout: styled.div`\r\n  float: right;\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    span {\r\n      padding-left: 10px;\r\n    }\r\n  }\r\n  & img {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    margin: 0 10px;\r\n  }\r\n  & button {\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    outline: none;\r\n    display: inline-block;\r\n    color: white;\r\n    margin-right: 20px;\r\n    padding: 10px 10px;\r\n    border-radius: 10px;\r\n    font-family: 'Montserrat', sans-serif;\r\n    text-transform: uppercase;\r\n    letter-spacing: 2px;\r\n    background-image: linear-gradient(to right, #9EEFE1 0%, #4830F0 51%, #9EEFE1 100%);\r\n    background-size: 200% auto;\r\n    box-shadow: 0 0 20px rgba(0,0,0,.1);\r\n    transition: .5s\r\n  }\r\n  button:hover {\r\n    background-position: right center;\r\n    }\r\n  `\r\n}\r\n\r\nexport default Logout;","import { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../ReduxStore/reduser/authReduser/authReduser\";\r\nimport {deleteProfile} from '../../ReduxStore/reduser/profileReduser/profileReduser';\r\nimport Logout from \"../Logout/Logout\";\r\n\r\nconst { default: styled } = require(\"styled-components\");\r\n\r\nconst Header =(props)=>{\r\n\r\n  useEffect(()=>{\r\n    return (logout, deleteProfile)\r\n  })\r\n\r\n  return (\r\n    <S.Header >\r\n      <Logout {...props}/>\r\n    </S.Header>\r\n  )\r\n};\r\n\r\nconst S={\r\n  Header: styled.div`\r\n    background-color: #21EBE7;\r\n    margin: 5px;\r\n    width: 100%;\r\n    height:7vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n    div {\r\n      border-radius: 30px;\r\n    }\r\n  `\r\n};\r\n\r\nexport default connect(null,{logout, deleteProfile})(Header);","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NavBlock =(props)=>{\r\n\r\n  return(\r\n    <S.NavBlock>\r\n      <p>Navigation</p>\r\n      <div>\r\n        <div><NavLink to='/profile'>Profile</NavLink></div>\r\n        <div><NavLink to='/users'>Users</NavLink></div>\r\n        <div><NavLink to='/dialogs'>Dialogs</NavLink></div>\r\n        {/* <div><NavLink to='/newsfeed'>News feed</NavLink></div> */}\r\n      </div>\r\n    </S.NavBlock>\r\n  )\r\n};\r\n\r\nconst S={\r\n  NavBlock: styled.div`\r\n  border-radius: 30px;\r\n  background-color: coral;\r\n  width: 12%;\r\n  @media screen and (max-width: 650px){\r\n    width: 5%;\r\n  }\r\n  height:80vh;\r\n  min-width: 80px;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 10px;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n  & > p {\r\n    font-size: 24px;\r\n    color: #C9FCFF;\r\n    font-weight: bold;\r\n    @media screen and (max-width: 1100px){\r\n      font-weight: lighter;\r\n      font-size: 18px;\r\n    }\r\n    @media screen and (max-width: 820px){\r\n      font-size: 12px;\r\n    }\r\n    @media screen and (max-width: 820px){\r\n      font-size: 9px;\r\n    }\r\n  }\r\n  & div > a {\r\n  text-decoration: none;\r\n  outline: none;\r\n  padding: 3px;\r\n  display: inline-block;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border: 2px solid #C9FCFF;\r\n  border-radius: 8px;\r\n  font-family: 'Montserrat', sans-serif; \r\n  color: #C9FCFF;\r\n  transition: .2s ease-in-out;\r\n  @media screen and (max-width: 1000px){\r\n      font-weight: lighter;\r\n      font-size: 12px;\r\n    }\r\n}\r\n& div > a:before {\r\n  content: \"\";\r\n  background: linear-gradient(90deg, rgba(255,255,255,.1), rgba(255,255,255,.5));\r\n  height: 50px;\r\n  width: 50px;\r\n  position: absolute;\r\n  top: -8px;\r\n  left: -75px;\r\n  transform: skewX(-45deg);\r\n}\r\n& div > a:hover {\r\n  background: #9ADDE0;\r\n  color: #fff;\r\n}\r\n& div > a:hover:before {\r\n  left: 150px;\r\n  transition: .5s ease-in-out;\r\n}\r\n  `\r\n}\r\n\r\nexport default NavBlock;","import { useSelector} from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport styled from \"styled-components\";\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nconst Post = (props) => {\r\n  const profile=useSelector(state=>state.profile.profile);\r\n  let images = null\r\n  if(!profile){\r\n    images = <Preloader/>\r\n  } else {\r\n    images = profile.photos.large || userPhoto\r\n  }\r\n  \r\n  return (\r\n    <S.Wrapper>\r\n      <div className='imgPost'><img src={images} alt='img'/></div>\r\n      <div className='messege-like'>\r\n        <div className='messegePost'><span>{ props.message }</span></div>\r\n        <div className='like-dislike-post'>\r\n          <div className='likePost'>\r\n            <button onClick={()=>{\r\n              props.addLike(props.userId, props.id);\r\n            }}><span>Like</span> </button>\r\n            <span>: { props.likesCount }</span>\r\n          </div>\r\n          <div className='disLikePost'>\r\n            <button onClick={()=>{\r\n              props.addDislike(props.userId, props.id);\r\n            }}><span>Dislike</span> </button>\r\n            <span>: {props.disLikeCount}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {!props.match.params.userId ? (<div className='deletePost'>\r\n        <button onClick={()=>{\r\n          props.deletePost(props.id)\r\n        }}><span>X</span></button>\r\n      </div>): null}\r\n    </S.Wrapper>\r\n  )\r\n};\r\n\r\nconst S ={\r\n  Wrapper: styled.div`\r\n    background-color: #579194;\r\n    color: white;\r\n    margin: 20px 0;\r\n    padding-left: 10px;\r\n    display: grid;\r\n    grid-template-columns: 20% auto 20%;\r\n    .messege-like {\r\n      display: grid;\r\n      grid-template-rows: 60% 40%;\r\n      grid-column: 2;\r\n    }\r\n    .messegePost {\r\n      width:100%;\r\n      grid-row: 1;\r\n      display:flex;\r\n      justify-content:center;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      span {\r\n        display: block;\r\n      }\r\n    }\r\n    .like-dislike-post{\r\n      display: flex;\r\n      justify-content: space-around;\r\n      align-items: center;\r\n      grid-row: 2;\r\n      margin-bottom: 10px;\r\n    }\r\n    .likePost,\r\n    .disLikePost {\r\n      & button:hover {background: rgba(255,255,255,0);}\r\n      & button:hover:before {\r\n        bottom: 0%;\r\n        top: auto;\r\n        height: 100%;\r\n      }\r\n      & button:before {\r\n        content: \"\";\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        height: 0;\r\n        width: 100%;\r\n        z-index: -1;\r\n        color: white;\r\n        background: linear-gradient(180deg, #ff3000, #ed0200, #ff096c, #d50082);\r\n        transition: .8s cubic-bezier(.165,.84,.44,1);\r\n      }\r\n      & button {\r\n        @media screen and (max-width: 650px) {\r\n          letter-spacing: .5px;\r\n        }\r\n        text-decoration: none;\r\n        outline: none;\r\n        color: white;\r\n        display: inline-block;\r\n        position: relative;\r\n        border: 1px solid;\r\n        border-image: linear-gradient(180deg, #ff3000, #ed0200, #ff096c, #d50082);\r\n        border-image-slice: 1;\r\n        font-family: 'Montserrat', sans-serif;\r\n        text-transform: uppercase;\r\n        overflow: hidden;\r\n        letter-spacing: 2px;\r\n        transition: .8s cubic-bezier(.165,.84,.44,1);\r\n          span {\r\n            @media screen and (max-width: 650px) {\r\n              font-size: 9px;\r\n              width: 50px;\r\n              height: 20px;\r\n            }\r\n          width: 100%;\r\n          height: 100%;\r\n          color: red;\r\n          font-size: 18px;\r\n        }\r\n      } \r\n    }\r\n    .deletePost {\r\n      display: flex;\r\n      grid-column: 3;\r\n      justify-content: center;\r\n      align-items: center;\r\n      max-width: 100%;\r\n      button {\r\n        @media screen and (max-width: 650px){\r\n          width: 30px;\r\n          height: 30px;\r\n        }\r\n        text-decoration: none;\r\n        outline: none;\r\n        display: inline-block;\r\n        width: 60px;\r\n        height: 45px;\r\n        line-height: 45px;\r\n        border-radius: 45px;\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-size: 11px;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        letter-spacing: 3px;\r\n        font-weight: 600;\r\n        color: #524f4e;\r\n        background: white;\r\n        box-shadow: 0 8px 15px rgba(0,0,0,.1);\r\n        transition: .3s;\r\n        position: relative;\r\n        span {\r\n          @media screen and (max-width: 650px) {\r\n            bottom: -35%;\r\n            left: 39%;\r\n          }\r\n          display: block;\r\n          position: absolute;\r\n          bottom: -5%;\r\n          left: 43%;\r\n        }\r\n      }\r\n      button:hover {\r\n        background: #2EE59D;\r\n        box-shadow: 0 15px 20px rgba(46,229,157,.4);\r\n        color: white;\r\n        transform: translateY(-7px);\r\n      }\r\n    }\r\n    .imgPost {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      grid-column: 1;\r\n      height: 100%;\r\n      max-height: 150px;\r\n      border-radius: 40px;\r\n      & img {\r\n        @media screen and (max-width: 650px) {\r\n          width: 50px;\r\n        }\r\n        display: block;\r\n        border-radius: 50%;\r\n        max-width: 100px;\r\n        width: auto;\r\n        height: auto;\r\n      }\r\n    }\r\n  `\r\n}\r\n\r\nexport default compose(withRouter)(Post);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { reduxForm } from \"redux-form\";\r\nimport styled from 'styled-components';\r\nimport { createField, Textarea } from \"../../../common/FormControl/FormControl\";\r\nimport { maxLengthCreator, required } from \"../../../utilit/validators/validators\";\r\nimport Post from './Post';\r\n\r\nconst maxLength10 = maxLengthCreator(9);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n      {createField(\"Post message\",\"newPostText\", [required, maxLength10], Textarea )}\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.userPosts]\r\n            .reverse()\r\n            .map(p => <Post \r\n              key={p.id} \r\n              message={p.message} \r\n              likesCount={p.likesCount}\r\n              disLikeCount={p.disLikesCount} \r\n              id={p.id} \r\n              deletePost={props.deletePost}\r\n              addLike={props.addLike}\r\n              addDislike={props.addDislike}\r\n              userId={props.userId}\r\n              />);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n    \r\n    if (props.match.params.userId ) {\r\n        return (\r\n            <S.Post>\r\n                <h3>My posts</h3>\r\n                <div className='my-post'>\r\n                    {postsElements}\r\n                </div>\r\n            </S.Post>\r\n        )\r\n    }\r\n    return (\r\n        <S.Post>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className='my-post'>\r\n                {postsElements}\r\n            </div>\r\n        </S.Post>\r\n    )\r\n});\r\n\r\nconst S={\r\n  Post: styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: #C9FCFF;\r\n  border-radius: 10px;\r\n  .my-post {\r\n    @media screen and (max-width: 650px) {\r\n        width: 95%;\r\n    }\r\n      width: 80%;\r\n    & >  div {\r\n        @media screen and (max-width: 650px) {\r\n            height: 150px;\r\n        }\r\n        border-radius: 20px;\r\n    } \r\n  }\r\n  form {\r\n      width: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      div {\r\n          width: 100%;\r\n          margin: 5px 5px;\r\n          display: flex;\r\n          justify-content: center;\r\n          > div {\r\n              text-align: center;\r\n            > button {\r\n                text-decoration: none;\r\n                outline: none;\r\n                display: inline-block;\r\n                padding: 15px 30px;\r\n                margin: 10px 20px;\r\n                border-radius: 10px;\r\n                box-shadow: 0 0 40px 40px #F137A6 inset, 0 0 0 0 #F137A6;\r\n                font-family: 'Montserrat', sans-serif;\r\n                font-weight: bold;\r\n                letter-spacing: 2px;\r\n                color: white;\r\n                transition: .15s ease-in-out;\r\n                }\r\n            > button:hover {\r\n                box-shadow: 0 0 10px 0 #F137A6 inset, 0 0 10px 4px #F137A6;\r\n                color: #F137A6;\r\n                }\r\n              margin: 0 auto;\r\n              width: 90%;\r\n              > div {\r\n                width: 90%;\r\n                textarea {\r\n                @media screen and (max-width: 650px) {\r\n                    height: 100px;\r\n                }\r\n                text-align: center;\r\n                width: 90%;\r\n                max-width: 100%;\r\n                max-height: 200px;\r\n                resize: none;\r\n                border-radius: 20px;\r\n                outline: none;\r\n                padding: 10px;\r\n                }\r\n              }\r\n          }\r\n      }\r\n  }\r\n  `\r\n}\r\nexport default compose(withRouter)(MyPosts);","\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { addPost, deletePost, addLike, addDislike } from '../../../ReduxStore/reduser/postReduser/userPostsReduser/postReduser';\r\n\r\nconst MyPostsContainer =(props)=>{\r\n\r\n  const userPosts = useSelector(state=> state.userPosts.userPosts);\r\n  const userId = useSelector(state=> state.userPosts.userId);\r\n  \r\n  return (\r\n    <>\r\n      <MyPosts {...props} \r\n          userPosts={userPosts}\r\n          userId={userId}\r\n          userPhoto={props.userPhoto}\r\n      />\r\n    </>\r\n  )\r\n};\r\n\r\nexport default compose(withRouter,\r\n  connect(null,{ addPost, deletePost, addLike, addDislike }))(MyPostsContainer);","import {createField, Input, Textarea} from '../../../common/FormControl/FormControl';\r\nimport { reduxForm } from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n  return <form onSubmit={handleSubmit}>\r\n      <div><button>save</button></div>\r\n      {error && <div>\r\n          {error}\r\n      </div>\r\n      }\r\n      <div>\r\n          <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n      </div>\r\n      <div>\r\n          <b>Looking for a job</b>: { createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"} )}\r\n      </div>\r\n\r\n      <div>\r\n          <b>My professional skills</b>:\r\n          { createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea  )}\r\n      </div>\r\n\r\n\r\n      <div>\r\n          <b>About me</b>:\r\n          { createField(\"About me\", \"aboutMe\", [], Textarea  )}\r\n      </div>\r\n      <div>\r\n          <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n          return <div key={key}>\r\n          <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n          </div>\r\n      })}\r\n      </div>\r\n  </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <b>Status: </b> <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport ProfileDataForm from \"../ProfileDataForm/ProfileDataForm\";\r\nimport ProfileStatus from \"../ProfileStatus/ProfileStatus\";\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\n\r\nconst ProfileInfo =({profile, status, updateStatus, isOwner, savePhoto, saveProfile})=>{\r\n\r\nconst [editMode, setEditMode] = useState(false);\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n        savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\nconst onSubmit = (formData) => {\r\n    saveProfile(formData).then(\r\n        () => {\r\n            setEditMode(false);\r\n        }\r\n    );\r\n}\r\n\r\nif(!profile){\r\n  return <Preloader/>\r\n}\r\n\r\n  return (<>\r\n    <S.ProfileContainer>\r\n      <S.Porfile>\r\n          <S.UserImg src={profile.photos.large || userPhoto}/>\r\n          {isOwner && <div>\r\n            \r\n          <button><input type={\"file\"} onChange={onMainPhotoSelected}/>Сменить фото</button>\r\n          </div>}\r\n\r\n          <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n      </S.Porfile>\r\n      <S.ProfileInfo>\r\n        <div>\r\n          { editMode\r\n              ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n              : <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner}/> }\r\n        </div>\r\n      </S.ProfileInfo>\r\n    </S.ProfileContainer>\r\n  </>\r\n  )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n  return <>\r\n      <div>\r\n          <b>Full name</b>: {profile.fullName }\r\n      </div>\r\n      <div>\r\n          <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {profile.lookingForAJob &&\r\n      <div>\r\n          <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n      </div>\r\n      }\r\n\r\n      <div>\r\n          <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n          <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n      })}\r\n      </div>\r\n      {isOwner && <div className='button'><button onClick={goToEditMode}>Edit</button></div>}\r\n  </>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return <div><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\n\r\nconst S={\r\n  ProfileContainer: styled.div`\r\n  display: flex;\r\n  margin: 10px;\r\n  border-radius: 20px;\r\n  @media screen and (max-width: 830px) {\r\n    display: block;\r\n  }\r\n  `,\r\n  Porfile: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    min-width: 28%;\r\n    margin: 10px;\r\n    background-color: #B6F5E8;\r\n    border-radius: 20px;\r\n    div {\r\n      position: relative;\r\n      \r\n      margin: 10px 10px;\r\n    }\r\n    div > button {\r\n      width: 100%;\r\n      height: 100%;\r\n      text-decoration: none;\r\n      outline: none;\r\n      display: inline-block;\r\n      border-radius: 30px;\r\n      background-image: linear-gradient(45deg, #6ab1d7 0%, #33d9de 50%, #002878 100%);\r\n      background-position: 100% 0;\r\n      background-size: 200% 200%;\r\n      font-family: 'Montserrat', sans-serif;\r\n      font-size: 14px;\r\n      font-weight: 300;\r\n      color: white;\r\n      box-shadow: 0 16px 32px 0 rgba(0,40,120,.35);\r\n      transition: .5s;\r\n      position: relative;\r\n      padding: 15px 60px;\r\n    }\r\n    div > button:hover {\r\n      box-shadow: 0 0 0 0 rgba(0,40,120,0);\r\n      background-position: 0 0;\r\n    }\r\n    div > button > input {\r\n      margin: 0;\r\n      padding: 0;\r\n      left: 0;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      opacity: 0;\r\n      cursor: pointer;\r\n      position: absolute;\r\n      border-radius: 30px;\r\n    }\r\n    \r\n  `,\r\n  ProfileInfo: styled.div`\r\n    @media screen and (max-width: 830px) {\r\n      max-width: 90%;\r\n      width: 100%;\r\n      margin: 0 auto;\r\n    }\r\n    display:flex;\r\n    flex-direction: column;\r\n    width: 68%;\r\n    align-items: center;\r\n    margin: 10px;\r\n    background-color: #B6F5E8;\r\n    border-radius: 20px;\r\n    & div {\r\n      @media screen and (max-width: 830px) {\r\n      width: 97%;\r\n    }\r\n      width: 50%;\r\n      margin: 10px 5px;\r\n      div {\r\n          width: 95%;\r\n        }\r\n      b {\r\n        width: 100%;\r\n        \r\n      }\r\n      \r\n    }\r\n    .button {\r\n      text-align: center;\r\n      button {\r\n        text-decoration: none;\r\n        outline: none;\r\n        display: inline-block;\r\n        padding: 15px 15px;\r\n        margin: 10px 10px;\r\n        border-radius: 10px;\r\n        box-shadow: 0 0 40px 40px #F137A6 inset, 0 0 0 0 #F137A6;\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-weight: bold;\r\n        letter-spacing: 2px;\r\n        color: white;\r\n        transition: .15s ease-in-out;\r\n        width: 100px;\r\n      }\r\n      button:hover {\r\n        box-shadow: 0 0 10px 0 #F137A6 inset, 0 0 10px 4px #F137A6;\r\n        color: #F137A6;\r\n      }\r\n    }\r\n  `,\r\n  UserImg: styled.img`\r\n  margin: 5px auto;\r\n    width:200px;\r\n    border-radius: 20px;\r\n  `\r\n}\r\n\r\nexport default ProfileInfo;","import MyPostsContainer from \"./MyPostContainer/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props)=>{\r\n  \r\n  return (\r\n    <div>\r\n      <ProfileInfo savePhoto={props.savePhoto}\r\n                    isOwner={props.isOwner}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    saveProfile={props.saveProfile}\r\n                    updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default Profile;","import { connect, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from '../../ReduxStore/reduser/profileReduser/profileReduser';\r\nimport styled from \"styled-components\";\r\nimport Profile from \"./Profile\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileContainer =(props)=>{\r\n\r\n  const status=useSelector(state=>state.profile.status);\r\n  const authorizedUserId=useSelector(state=>state.auth.userId);\r\n  const profile=useSelector(state=>state.profile.profile);\r\n\r\n  const refreshProfile = () => {\r\n    let userId = props.match.params.userId;\r\n    if (!userId) {\r\n        userId = authorizedUserId;\r\n        if (!userId) {\r\n            props.history.push(\"/login\");\r\n        }\r\n    }\r\n    props.getUserProfile(userId);\r\n    props.getStatus(userId);\r\n}\r\n\r\nuseEffect(()=>{\r\n  refreshProfile();\r\n},[])\r\n\r\n  return (\r\n    <S.ProfileContainer>\r\n        <Profile {...props}  isOwner={!props.match.params.userId}\r\n                     profile={profile}\r\n                     status={status}\r\n                     updateStatus={props.updateStatus}\r\n                     savePhoto={props.savePhoto}/>\r\n\r\n    </S.ProfileContainer>\r\n  )\r\n};\r\n\r\nconst S ={\r\n  ProfileContainer: styled.div`\r\n  background-color: #fff;\r\n  width:100%;\r\n  `\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(null, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n  withRouter\r\n)(ProfileContainer);\r\n","\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <S.Swrapper>\n        { portionNumber > 1 &&\n        <button className='paginator-pages-prev' onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                return <button className='paginator-pages-button'\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</button>\n            })}\n        { portionCount > portionNumber &&\n            <button  className='paginator-pages-next' onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </S.Swrapper>\n}\n\nconst S = {\n    Swrapper: styled.div`\n        .paginator-pages-button {\n            cursor: pointer;\n            text-decoration: none;\n            outline: none;\n            color: black;\n            display: inline-block;\n            position: relative;\n            border: 1px solid;\n            border-image: linear-gradient(180deg, #ff3000, #ed0200, #ff096c, #d50082);\n            border-image-slice: 1;\n            font-family: 'Montserrat', sans-serif;\n            text-transform: uppercase;\n            overflow: hidden;\n            letter-spacing: 2px;\n            transition: .8s cubic-bezier(.165,.84,.44,1);\n        }\n        .paginator-pages-button:before {\n            content: \"\";\n            position: absolute;\n            left: 0;\n            top: 0;\n            height: 0;\n            width: 100%;\n            z-index: -1;\n            color: white;\n            background: linear-gradient(180deg, #ff3000, #ed0200, #ff096c, #d50082);\n            transition: .8s cubic-bezier(.165,.84,.44,1);\n            }\n        .paginator-pages-button:hover {background: rgba(255,255,255,0);}\n        .paginator-pages-button:hover:before {\n        bottom: 0%;\n        top: auto;\n        height: 100%;\n        }\n\n        .paginator-pages-prev,\n        .paginator-pages-next {\n            cursor: pointer;\n            text-decoration: none;\n            outline: none;\n            display: inline-block;\n            margin: 10px 10px;\n            border-radius: 10px;\n            box-shadow: 0 0 40px 40px #F137A6 inset, 0 0 0 0 #F137A6;\n            font-family: 'Montserrat', sans-serif;\n            font-weight: bold;\n            letter-spacing: 2px;\n            color: white;\n            transition: .15s ease-in-out;\n        }\n        .paginator-pages-prev:hover,\n        .paginator-pages-next:hover {\n            box-shadow: 0 0 10px 0 #F137A6 inset, 0 0 10px 4px #F137A6;\n            color: #F137A6;\n}\n    `\n}\n\n\nexport default Paginator;","import React from 'react';\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow, getUserProfile}) => {\r\n    return (\r\n       <S.User>\r\n          <div className='header-user'>\r\n              <div>\r\n                  <NavLink to={'/profile/' + user.id} onClick={()=>{\r\n                      getUserProfile(user.id);\r\n                  }}>\r\n                  <img src={user.photos.small != null ? user.photos.small : userPhoto} alt='avatarIMG'\r\n                        />\r\n                  </NavLink>\r\n              </div>\r\n              <div className='followed'>\r\n                  {user.followed\r\n                      ? <button disabled={followingInProgress\r\n                          .some(id => id === user.id)}\r\n                                onClick={() => { unfollow(user.id) }}>\r\n                          Unfollow</button>\r\n                      : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                onClick={() => { follow(user.id) }}>\r\n                                Follow</button>}\r\n\r\n              </div>\r\n          </div>\r\n          <div className='info-user'>\r\n              <div>\r\n                <div><span>Name :</span><span> {user.name}</span></div>\r\n                <div>{user.status}</div>\r\n            </div>\r\n            <div>\r\n                <div>{'user.location.country'}</div>\r\n                <div>{'user.location.city'}</div>\r\n            </div>\r\n          </div>\r\n      </S.User>)\r\n}\r\n\r\nconst S ={\r\n  User: styled.div`\r\n  @media screen and (max-width: 750px) {\r\n      width: 45%;\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n      width: 90%;\r\n  }\r\n    padding-bottom: 20px;\r\n    width: 30%;\r\n    height: 200px;\r\n    margin: 10px 0;\r\n    border:2px solid red;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 30px;\r\n    background-color: #18F5EC;\r\n    .followed > button {\r\n        cursor: pointer;\r\n        text-decoration: none;\r\n        outline: none;\r\n        display: inline-block;\r\n        padding: 5px 10px;\r\n        position: relative;\r\n        overflow: hidden;\r\n        border: 2px solid #fe6637;\r\n        border-radius: 8px;\r\n        font-family: 'Montserrat', sans-serif; \r\n        color: #fe6637;\r\n        transition: .2s ease-in-out;\r\n    }\r\n    .followed > button:before {\r\n        content: \"\";\r\n        background: linear-gradient(90deg, rgba(255,255,255,.1), rgba(255,255,255,.5));\r\n        height: 50px;\r\n        width: 50px;\r\n        position: absolute;\r\n        top: -8px;\r\n        left: -75px;\r\n        transform: skewX(-45deg);\r\n        }\r\n    .followed > button:hover {\r\n        background: #fe6637;\r\n        color: #fff;\r\n    }\r\n    .followed > button:hover:before {\r\n        left: 150px;\r\n        transition: .5s ease-in-out;\r\n    }\r\n  .info-user {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      & div {\r\n          div {\r\n            display: flex;\r\n            justify-content: start;\r\n        }\r\n      }\r\n  }\r\n  .header-user {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content:center;\r\n    align-items: center;\r\n  }\r\n  & img {\r\n    width: 100px;\r\n  }\r\n  `\r\n}\r\n\r\nexport default User;","import styled from \"styled-components\";\r\nimport Paginator from '../../common/Paginator/Paginator'\r\nimport User from \"./User/User\";\r\n\r\n\r\nconst Users =({currentPage, totalUsersCount, pageSize, onPageChanged, users, getUserProfile, ...props})=>{\r\n  return (\r\n    <S.Users>\r\n      <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <S.User>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                                     getUserProfile={getUserProfile}\r\n                    />\r\n                )\r\n            }\r\n        </S.User>\r\n      \r\n    </S.Users>\r\n  )\r\n};\r\n\r\nconst S ={\r\n  Users: styled.div`\r\n  background-color: #fff;\r\n  width:100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  `,\r\n  User: styled.div`\r\n  display:flex;\r\n  flex-wrap:wrap;\r\n  justify-content: space-around;\r\n  width:100%;\r\n  `\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.followingInProgress;\r\n};\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n};","import { connect, useSelector } from \"react-redux\";\r\nimport Users from \"../Users\";\r\nimport {getUserProfile} from '../../../ReduxStore/reduser/profileReduser/profileReduser';\r\nimport {\r\n  follow,\r\n  unfollow, \r\n  requestUsers\r\n} from '../../../ReduxStore/reduser/usersRedusers/usersRedusers';\r\nimport {  toggleFollowingProgress, setCurrentPage } from '../../../ReduxStore/reduser/usersRedusers/action/action';\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount, \r\n  getUsers\r\n} from '../../../Selectors/usersSelectors';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst UserContainer =(props)=>{\r\n\r\n  const state = useSelector(state=>state.users)\r\n\r\n  const users= getUsers(state);\r\n  const pageSize= getPageSize(state);\r\n  const totalUsersCount= getTotalUsersCount(state);\r\n  const currentPage= getCurrentPage(state);\r\n  const isFetching=getIsFetching(state);\r\n  const followingInProgress=getFollowingInProgress(state);\r\n\r\n  const onPageChanged = (pageNumber) => {\r\n    const {pageSize} = props;\r\n    props.getUsers(pageNumber, pageSize);\r\n}\r\n\r\nuseEffect(()=>{\r\n    props.getUsers(currentPage, pageSize);\r\n},[])\r\n\r\n  return(\r\n    <div>\r\n      {isFetching ? <Preloader/> : null}\r\n      <Users totalUsersCount={totalUsersCount}\r\n                   pageSize={pageSize}\r\n                   currentPage={currentPage}\r\n                   onPageChanged={onPageChanged}\r\n                   users={users}\r\n                   follow={props.follow}\r\n                   unfollow={props.unfollow}\r\n                   followingInProgress={followingInProgress}\r\n                   getUserProfile={props.getUserProfile}\r\n                   />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default connect(null, {follow, getUserProfile, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})(UserContainer);","import { compose } from \"redux\";\r\nimport styled from \"styled-components\";\r\nimport Dialogs from \"../Dialogs/Dialogs\";\r\nimport Header from \"../Header/Header\";\r\nimport NavBlock from \"../NavBlock/NavBlock\";\r\nimport ProfileContainer from \"../Profile/ProfileContainer\";\r\nimport UserContainer from \"../Users/UsersContainer/UsersContainer\";\r\n\r\nconst { Switch, Route, Redirect, withRouter } = require(\"react-router-dom\");\r\n\r\nconst Body=(props)=>{\r\n  \r\n  if (props.location.pathname==='/') {\r\n    return <Redirect to='/profile'/>\r\n  }\r\n\r\n  return (<>\r\n    <S.Header>\r\n      <Header/>\r\n      <S.Body>\r\n        <NavBlock/>\r\n        <Switch>\r\n          <Route exact path='/profile/:userId?' render={()=><ProfileContainer />}/>\r\n          <Route path='/users' render={()=><UserContainer/>}/>\r\n          <Route path='/dialogs/:userId?' render={()=><Dialogs/>}/>\r\n        </Switch>\r\n      </S.Body>\r\n    </S.Header>\r\n    </>\r\n  )\r\n};\r\n\r\nconst S={\r\n  Body: styled.div`\r\n  display: flex;\r\n  background-color: #fff;\r\n  `,\r\n  Header: styled.div`\r\n  background-color: #fff;\r\n  & > div {\r\n    border-radius: 30px;\r\n  }\r\n    \r\n  `\r\n}\r\n\r\nexport default compose(withRouter)(Body);"],"sourceRoot":""}