{"version":3,"sources":["common/FormControl/FormControl.js","ReduxStore/reduser/profileReduser/constans/constans.js","ReduxStore/reduser/profileReduser/action/action.js","ReduxStore/reduser/profileReduser/profileReduser.js","api/api.js","ReduxStore/reduser/usersRedusers/constans/constans.js","containers/AuthBlock/AuthBlock.js","ReduxStore/reduser/initialReduser/constans/constans.js","ReduxStore/reduser/initialReduser/initialReduser.js","App.js","ReduxStore/reduser/initialReduser/action/action.js","ReduxStore/reduser/combineRedusers.js","index.js","ReduxStore/reduser/usersRedusers/action/action.js","ReduxStore/reduser/authReduser/authReduser.js","utilit/validators/validators.js","ReduxStore/reduser/postReduser/userPostsReduser/constans/constans.js","ReduxStore/reduser/postReduser/userPostsReduser/postReduser.js","ReduxStore/reduser/postReduser/userPostsReduser/action/action.js","assets/images/preloader.svg","common/Preloader/Preloader.js","ReduxStore/reduser/authReduser/actions/actions.js","ReduxStore/reduser/authReduser/constans/constans.js","utilit/object-helpers.js","ReduxStore/reduser/usersRedusers/usersRedusers.jsx","components/Dialogs/UserDialogItems/Masseges/Messeges.js","components/Dialogs/UserDialogItems/UserDialogItems.js","components/Dialogs/Dialogs.js","assets/images/user.png","components/Logout/Logout.js","components/Header/Header.js","components/NavBlock/NavBlock.js","components/Profile/MyPostContainer/Post.js","components/Profile/MyPostContainer/MyPosts.js","components/Profile/MyPostContainer/MyPostsContainer.js","components/Profile/ProfileDataForm/ProfileDataForm.js","components/Profile/ProfileStatus/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","common/Paginator/Paginator.jsx","components/Users/User/User.js","components/Users/Users.js","Selectors/usersSelectors.js","components/Users/UsersContainer/UsersContainer.js","components/Body/Body.js","ReduxStore/reduser/dialogReduser/constans/constans.js","ReduxStore/reduser/dialogReduser/dialogReduser.js","ReduxStore/reduser/dialogReduser/action/action.js"],"names":["FormControl","input","meta","touched","error","children","hasError","className","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","DELETE_PROFILE","setStatus","status","type","defaultState","profile","getUserProfile","userId","dispatch","a","usersAPI","getProfile","response","data","getStatus","profileAPI","updateStatus","resultCode","console","log","savePhoto","file","photos","saveProfile","getState","auth","stopSubmit","_error","messages","Promise","reject","deleteProfile","profileReduser","state","action","instance","axios","withCredentials","baseURL","headers","getUsers","currentPage","pageSize","get","then","follow","post","unfollow","delete","put","photoFile","formData","FormData","append","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","LoginReduxForm","reduxForm","require","form","handleSubmit","captchaUrl","useSelector","isAuth","onSubmit","required","src","alt","S","Main","styled","div","connect","path","render","INITIALIZED_SUCCESS","initialized","globalError","initializedReduser","Login","default","Wrapper","compose","withRouter","initializeApp","promise","getAuthUserData_","all","isInitializ","useEffect","exact","to","Body","Preloader","reducers","combineReducers","authReduser","formReducer","dialog","dialogReduser","users","usersReduser","userPosts","userPostReduser","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","store","document","getElementById","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","totalUsersCount","count","toggleIsFetching","isFetching","toggleFollowingProgress","loginIn","logout_","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","payload","value","maxLengthCreator","maxLength","length","ADD_POST","DELETE_POST","ADD_LIKE","ADD_DISLIKE","id","message","likesCount","disLikesCount","addPost","newPostText","addPostActionCreator","deletePost","postId","deletePostActionCreator","addDislike","addDislikeActionCreator","addLike","addLikeActionCreator","newPost","filter","p","map","obj","style","backgroundColor","preloader","setAuthUserData","url","getCaptchaUrlSuccess","updateObjectInArray","items","itemId","objPropName","newObjProps","u","followingInProgress","fake","requestUsers","page","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed","Messeges","messeg","UserDialog","onClick","getDialog","Dialogs","dialogsElements","dialogs","dial","masseges","activeUserDialog","mes","massege","Logout","profileImg","large","user","Header","NavBlock","images","userPhoto","disLikeCount","match","params","maxLength10","AddNewPostFormRedux","MyPosts","React","memo","postsElements","reverse","Post","values","ProfileDataFormReduxForm","Object","keys","contacts","key","ProfileStatus","useState","editMode","setEditMode","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileContainer","Porfile","ProfileInfo","UserImg","img","target","files","initialValues","Profile","authorizedUserId","history","push","refreshProfile","Swrapper","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","User","small","disabled","some","Users","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","pageNumber","Switch","Route","Redirect","location","pathname","GET_DIAlOG","getUserDialog"],"mappings":"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","file":"static/js/main.36172a36.chunk.js","sourcesContent":["import {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={ error+ \" \" + (hasError ? error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <div className={error}><span>{error}</span></div>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    \r\n    const {input, meta, child, ...restProps} = props;\r\n    \r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\", className=null) => (\r\n    <div className={className}>\r\n        <Field placeholder={placeholder} \r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> <span>{text}</span>\r\n    </div>\r\n);","export const SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nexport const SET_STATUS = 'SET_STATUS';\r\nexport const SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nexport const DELETE_PROFILE= 'DELETE_PROFILE';\r\n","import { DELETE_PROFILE, SAVE_PHOTO_SUCCESS, SET_STATUS, SET_USER_PROFILE } from \"../constans/constans\"\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\nexport const deleteProfiles = () =>({type: DELETE_PROFILE});","import { stopSubmit } from \"redux-form\";\r\nimport { profileAPI, usersAPI } from \"../../../api/api\";\r\nimport { savePhotoSuccess, setStatus, setUserProfile,deleteProfiles } from \"./action/action\";\r\nimport {  DELETE_PROFILE, SAVE_PHOTO_SUCCESS, SET_STATUS, SET_USER_PROFILE } from \"./constans/constans\";\r\n\r\nconst defaultState={\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nconst profileReduser = (state=defaultState, action)=>{\r\n  switch (action.type) {\r\n    case SET_STATUS: \r\n        return {\r\n            ...state,\r\n            status: action.status\r\n        }\r\n\r\n    case SET_USER_PROFILE: \r\n        return {...state, profile: action.profile};\r\n\r\n    case SAVE_PHOTO_SUCCESS: \r\n        return {...state, profile: {...state.profile, photos: action.photos }};\r\n\r\n    case DELETE_PROFILE:\r\n      return{\r\n        ...state,\r\n        profile: null,\r\n        status: \"\"\r\n      }\r\n    default:\r\n        return state;\r\n  }\r\n};\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  const response = await usersAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(response.data||''));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  try {\r\n      let response = await profileAPI.updateStatus(status);\r\n      if (response.data.resultCode === 0) {\r\n          dispatch(setStatus(status));\r\n      }\r\n      \r\n  } catch(error) {\r\n    console.log('ERROR')\r\n  }\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n  let response = await profileAPI.savePhoto(file);\r\n\r\n  if (response.data.resultCode === 0) {\r\n      dispatch(savePhotoSuccess(response.data.data.photos));\r\n  }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n  const userId = getState().auth.userId;\r\n  const response = await profileAPI.saveProfile(profile);\r\n\r\n  if (response.data.resultCode === 0) {\r\n      dispatch(getUserProfile(userId));\r\n  } else {\r\n      dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n      return Promise.reject(response.data.messages[0]);\r\n  }\r\n};\r\n\r\nexport const deleteProfile = ()=>(dispatch)=>{\r\n  return dispatch(deleteProfiles())};\r\n\r\nexport default profileReduser;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"60e06d6c-846e-4070-ad8b-1afdb6af21fe\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) { \r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile );\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n};\r\n\r\n\r\n","export const FOLLOW = 'FOLLOW';\r\nexport const UNFOLLOW = 'UNFOLLOW';\r\nexport const SET_USERS = 'SET_USERS';\r\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nexport const SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nexport const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';","import { connect, useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { createField, Input } from \"../../common/FormControl/FormControl\";\r\nimport Body from \"../../components/Body/Body\";\r\nimport {login} from '../../ReduxStore/reduser/authReduser/authReduser';\r\nimport { required } from \"../../utilit/validators/validators\";\r\nconst {  reduxForm } = require(\"redux-form\");\r\n\r\n\r\nconst AuthBlock = ({handleSubmit, error, captchaUrl}) => {\r\n  const auth = useSelector(state=>state.auth.isAuth);\r\n  if (auth) {\r\n    <Redirect to='/'/>\r\n  }\r\n\r\n\r\n  return (\r\n      <form onSubmit={handleSubmit}>\r\n          {createField(\"Email\", \"email\", [required], Input)}\r\n          {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n          {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"Remember me.\", 'checkbox')}\r\n\r\n          { captchaUrl && <img src={captchaUrl} alt=''/>}\r\n          { captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n\r\n\r\n          {error && <div >\r\n              {error}\r\n          </div>\r\n          }\r\n          <div>\r\n              <button>Login in</button>\r\n          </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(AuthBlock);\r\n\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n  }\r\n\r\n  if (props.isAuth) {\r\n      return <Route path='/' render={()=><Body/>}/>\r\n  }\r\n\r\n  return <S.Main>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n  </S.Main>\r\n}\r\n\r\nconst mapStateToprops=(state)=>({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl,\r\n});\r\n\r\n\r\nconst S ={\r\n  Main: styled.div`\r\n  display: flex;\r\n  flex-direction:column;\r\n  width: 100%;\r\n  min-width: 300px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 99vh;\r\n  background-color: #21EBE7;\r\n  div {\r\n    text-align: center; \r\n  }\r\n  input::placeholder {\r\n    text-align: center;\r\n  }\r\n  input {\r\n    width: 60%;\r\n    min-width: 280px;\r\n    border-radius: 20px;\r\n    margin: 10px;\r\n    outline: none;\r\n  }\r\n  span {\r\n    color: black;\r\n    font-size: large;\r\n    \r\n  }\r\n  h1 {\r\n    color: #fff;\r\n  }\r\n  .checkbox {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 50px;\r\n    text-align: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position:relative; \r\n    span {\r\n          width: 50%;\r\n          position: absolute;\r\n          left: 0;\r\n          z-index: 0;\r\n        }\r\n    div{\r\n      width: 100%;\r\n      div{\r\n        input {\r\n          top: 30%;\r\n          left: 0;\r\n          position:absolute;\r\n          margin: 0;\r\n          padding: 0;\r\n          width: 100%;\r\n          height: 20px;\r\n          cursor: pointer;\r\n          z-index: 10;\r\n          }\r\n      }\r\n    }\r\n  }\r\n  button {\r\n    text-decoration: none;\r\n    outline: none;\r\n    display: inline-block;\r\n    width: 140px;\r\n    height: 45px;\r\n    line-height: 45px;\r\n    border-radius: 45px;\r\n    margin: 10px 20px;\r\n    font-family: 'Montserrat', sans-serif;\r\n    font-size: 11px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    letter-spacing: 3px;\r\n    font-weight: 600;\r\n    color: #524f4e;\r\n    background: white;\r\n    box-shadow: 0 8px 15px rgba(0,0,0,.1);\r\n    transition: .3s;\r\n    }\r\n    button:hover {\r\n      background: #2EE59D;\r\n      box-shadow: 0 15px 20px rgba(70,212,59,.4);\r\n      color: white;\r\n      transform: translateY(-7px);\r\n    }\r\n  `\r\n}\r\n\r\n\r\nexport default connect(mapStateToprops, {login})(Login);","export const INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';","import { getAuthUserData_ } from \"../authReduser/actions/actions\";\r\nimport { initializedSuccess } from \"./action/action\";\r\nimport { INITIALIZED_SUCCESS } from \"./constans/constans\";\r\n\r\nconst defaultState ={\r\n  initialized: false,\r\n  globalError: null\r\n};\r\n\r\nconst initializedReduser=(state=defaultState, action)=>{\r\n  switch(action.type){\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializeApp = () => {\r\n  return (dispatch) => {\r\n    let promise = dispatch(getAuthUserData_());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n        \r\n}}\r\n\r\nexport default initializedReduser;","import { useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport Preloader from \"./common/Preloader/Preloader\";\nimport Body from \"./components/Body/Body\";\nimport {deleteProfile} from './ReduxStore/reduser/profileReduser/profileReduser';\nimport {getUserProfile} from './ReduxStore/reduser/profileReduser/profileReduser';\nimport { initializeApp } from \"./ReduxStore/reduser/initialReduser/initialReduser\";\nimport styled from \"styled-components\";\nconst { default: Login } = require(\"./containers/AuthBlock/AuthBlock\");\n\n\nconst  LastStepShag = ({getUserProfile, deleteProfile, initializeApp}) =>{\n\nconst isAuth= useSelector(state=>state.auth.isAuth);\nconst userId= useSelector(state=>state.auth.userId);\nconst isInitializ = useSelector(state=>state.initialized.initialized);\n\n  useEffect(()=>{\n    initializeApp();\n  },[]);\n\n  if(!isAuth){\n    deleteProfile();\n  }\n\n  const isInit =()=>{\n    if(!isInitializ){\n      return <Preloader/>\n    }\n    return isAuth ? (getUserProfile(userId), <Route exact to='/' render={()=><Body/>}/>): <Login/> \n  };\n\n  return (\n    <S.Wrapper >\n        {isInit()}\n    </S.Wrapper>\n  );\n}\n\nconst S = {\n  Wrapper: styled.div`\n  background-color: #21EBE7;\n  `\n}\n\nexport default compose(withRouter, connect(null,{initializeApp, getUserProfile, deleteProfile}))(LastStepShag);\n","import { INITIALIZED_SUCCESS } from \"../constans/constans\";\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});","import thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport  { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport dialogReduser from \"./dialogReduser/dialogReduser\";\r\nimport initializedReduser from \"./initialReduser/initialReduser\";\r\nimport profileReduser from \"./profileReduser/profileReduser\";\r\nimport usersReduser from \"./usersRedusers/usersRedusers\";\r\nimport userPostReduser from \"./postReduser/userPostsReduser/postReduser\";\r\nimport authReduser from \"./authReduser/authReduser\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReduser,\r\n  form: formReducer,\r\n  dialog: dialogReduser,\r\n  initialized: initializedReduser,\r\n  profile: profileReduser,\r\n  users: usersReduser,\r\n  userPosts: userPostReduser,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst state = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default state;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport LastStepShag from './App';\nimport state from './ReduxStore/reduser/combineRedusers';\n\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={state}>\n      <LastStepShag />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n","import { FOLLOW, SET_CURRENT_PAGE, SET_TOTAL_USERS_COUNT, SET_USERS, TOGGLE_IS_FETCHING, TOGGLE_IS_FOLLOWING_PROGRESS, UNFOLLOW } from \"../constans/constans\"\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})","import { getAuthUserData_, loginIn, logout_ } from \"./actions/actions\";\r\nimport { GET_CAPTCHA_URL_SUCCESS, SET_USER_DATA } from \"./constans/constans\";\r\n\r\nconst defaultState={\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaUrl: null,\r\n}\r\n\r\nconst authReduser =(state = defaultState, action)=>{\r\n  switch(action.type){\r\n    case SET_USER_DATA:\r\n    case GET_CAPTCHA_URL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getAuthUserData = getAuthUserData_;\r\nexport const login = loginIn;\r\nexport const logout = logout_;\r\n\r\nexport default authReduser;\r\n","export const required = value => {\n    if (value) return undefined;\n\n    return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","export const ADD_POST = 'ADD_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_LIKE = 'ADD_LIKE';\r\nexport const DELETE_LIKE = 'DELETE_LIKE';\r\nexport const ADD_DISLIKE = 'ADD_DISLIKE';\r\nexport const DELETE_DISLIKE = 'DELETE_DISLIKE';\r\n","import { addDislikeActionCreator, addLikeActionCreator, addPostActionCreator, deleteDislikeActionCreator, deleteLikeActionCreator, deletePostActionCreator } from \"./action/action\";\r\nimport { ADD_DISLIKE, ADD_LIKE, ADD_POST, DELETE_POST } from \"./constans/constans\";\r\n\r\nconst defaultState={\r\n  userPosts: [\r\n    {userId: 13106, id: 1, message: 'Hi, how are you?', likesCount: 12, disLikesCount: 0},\r\n    {userId: 13106, id: 2, message: 'It\\'s my first post', likesCount: 11, disLikesCount: 0},\r\n    {userId: 13106, id: 3, message: 'Blabla', likesCount: 11, disLikesCount: 0},\r\n    {userId: 13106, id: 4, message: 'Dada', likesCount: 11, disLikesCount: 0}    \r\n  ],\r\n  userId: 13106,\r\n};\r\n\r\nconst userPostReduser = (state=defaultState, action)=>{\r\n  switch(action.type){\r\n    case ADD_POST: \r\n    let id = state.userPosts.length+1||1;\r\n      let newPost = {\r\n          userId: state.userId,\r\n          id: id,\r\n          message: action.newPostText,\r\n          likesCount: 0, \r\n          disLikesCount: 0\r\n      };\r\n      return {\r\n          ...state,\r\n          userPosts: [...state.userPosts, newPost],\r\n          newPostText: ''\r\n      };\r\n  case DELETE_POST:\r\n    return {...state, userPosts: state.userPosts.filter(p => p.id !== action.postId)};\r\n\r\n  case ADD_LIKE:\r\n    return {...state, userPosts: state.userPosts.map( obj => {\r\n      if(obj.id===action.id){\r\n        return {...obj, likesCount: obj.likesCount+1} \r\n      }\r\n      return obj\r\n    })}\r\n    case ADD_DISLIKE:\r\n      return {...state, userPosts: state.userPosts.map( obj => {\r\n        if(obj.id===action.id){\r\n          return {...obj, disLikesCount: obj.disLikesCount+1} \r\n        }\r\n        return obj\r\n      })}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPost =(newPostText) => (dispatch) => { \r\n  dispatch(addPostActionCreator(newPostText))};\r\n\r\n export const deletePost=(postId) => (dispatch) => { \r\n  dispatch(deletePostActionCreator(postId))};\r\n\r\nexport const addDislike = (userId, id)=> dispatch => {\r\n  dispatch(addDislikeActionCreator(userId, id));\r\n};\r\n\r\nexport const addLike = (userId, id)=> dispatch => {\r\n  dispatch(addLikeActionCreator(userId, id));\r\n};\r\n\r\nexport const deleteLike = (userId, id)=>dispatch =>{\r\n  dispatch(deleteLikeActionCreator(userId, id));\r\n};\r\n\r\nexport const deleteDislike = (userId, id)=>dispatch=>{\r\n  dispatch(deleteDislikeActionCreator(userId, id));\r\n};\r\n\r\nexport default userPostReduser;","import { ADD_DISLIKE, ADD_LIKE, ADD_POST, DELETE_DISLIKE, DELETE_LIKE, DELETE_POST } from \"../constans/constans\";\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const deletePostActionCreator = (postId) => ({type: DELETE_POST, postId});\r\nexport const addLikeActionCreator = (userId, id)=>({type: ADD_LIKE,userId,id});\r\nexport const deleteLikeActionCreator = (userId, id)=>({type: DELETE_LIKE,userId,id});\r\nexport const addDislikeActionCreator = (userId, id)=>({type: ADD_DISLIKE,userId,id});\r\nexport const deleteDislikeActionCreator = (userId, id)=>({type: DELETE_DISLIKE,userId,id});","export default __webpack_public_path__ + \"static/media/preloader.ea356991.svg\";","import preloader from \"../../assets/images/preloader.svg\";\n\nlet Preloader = () => {\n    return <div  style={ { backgroundColor: 'white' } }>\n        <img src={preloader} />\n    </div>\n}\n\nexport default Preloader;","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI, securityAPI } from \"../../../../api/api\";\r\nimport { GET_CAPTCHA_URL_SUCCESS, SET_USER_DATA } from \"../constans/constans\";\r\n\r\nexport const loginIn =(email, password, rememberMe, captcha) => {\r\n  return async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe, captcha);\r\n  if (response.data.resultCode === 0) {\r\n      dispatch(getAuthUserData_())\r\n  } else {\r\n    if (response.data.resultCode === 10) {\r\n        dispatch(getCaptchaUrl());\r\n    }}\r\n      let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n      dispatch(stopSubmit(\"login\", {_error: message}));\r\n  };\r\n}\r\n\r\n  export const getAuthUserData_ = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA, payload:\r\n      {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n  const response = await securityAPI.getCaptchaUrl();\r\n  const captchaUrl = response.data.url;\r\n  dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n  type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n});\r\n\r\nexport const logout_ = () => async (dispatch) => {\r\n  let response = await authAPI.logout();\r\n  if (response.data.resultCode === 0) {\r\n      dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};","export const SET_USER_DATA = 'SET_USER_DATA';\r\nexport const GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import { usersAPI } from \"../../../api/api\";\r\nimport { followSuccess, setCurrentPage, setTotalUsersCount, setUsers, toggleFollowingProgress, toggleIsFetching, unfollowSuccess } from \"./action/action\";\r\nimport { FOLLOW, SET_CURRENT_PAGE, SET_TOTAL_USERS_COUNT, SET_USERS, TOGGLE_IS_FETCHING, TOGGLE_IS_FOLLOWING_PROGRESS, UNFOLLOW } from \"./constans/constans\";\r\nimport {updateObjectInArray} from '../../../utilit/object-helpers';\r\n\r\nconst defaultState = {\r\n  users: [],\r\n  pageSize: 9,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: [],\r\n  fake: 9\r\n};\r\n\r\n\r\nconst usersReduser=(state=defaultState,action)=>{\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n        return {\r\n            ...state,\r\n            users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n        }\r\n    case UNFOLLOW:\r\n        return {\r\n            ...state,\r\n            users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n        }\r\n    case SET_USERS: {\r\n        return {...state, users: action.users}\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n        return {...state, currentPage: action.currentPage}\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n        return {...state, totalUsersCount: action.count}\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n        return {...state, isFetching: action.isFetching}\r\n    }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n        return {\r\n            ...state,\r\n            followingInProgress: action.isFetching\r\n                ? [...state.followingInProgress, action.userId]\r\n                : state.followingInProgress.filter(id => id !== action.userId)\r\n        }\r\n    }\r\n    default:\r\n        return state;\r\n}\r\n};\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n  return async (dispatch) => {\r\n      dispatch(toggleIsFetching(true));\r\n      dispatch(setCurrentPage(page));\r\n\r\n      let data = await usersAPI.getUsers(page, pageSize);\r\n      dispatch(toggleIsFetching(false));\r\n      dispatch(setUsers(data.items));\r\n      dispatch(setTotalUsersCount(data.totalCount));\r\n  }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  let response = await apiMethod(userId);\r\n\r\n  if (response.data.resultCode === 0) {\r\n      dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n;\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n      followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n  }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n      followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n  }\r\n};\r\n\r\nexport default usersReduser;","import styled from \"styled-components\";\r\n\r\nconst Messeges = (props)=>{\r\n  return <S.Wrapper>\r\n    <span>{props.messeg}</span>\r\n    </S.Wrapper>\r\n};\r\n\r\nconst S = {\r\n  Wrapper: styled.div`\r\n  text-align: left;\r\n  font-size: large;\r\n  margin: 10px;\r\n  @media screen and (max-width: 600px) {\r\n          font-size: 12px;\r\n          margin: 3px;\r\n        }\r\n  `\r\n}\r\nexport default Messeges;","import { NavLink } from \"react-router-dom\"\r\nimport styled from \"styled-components\";\r\n\r\nconst UserDialog = (props)=>{\r\nconst path = '/dialogs/' + props.userId;\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <div className='navlink-dialog'>\r\n        <NavLink to={path} onClick={()=>{\r\n            props.getDialog(props.userId)\r\n        }}><span>{props.name}</span></NavLink>\r\n      </div>\r\n    </S.Wrapper>\r\n  )\r\n};\r\n\r\nconst S ={\r\n  Wrapper: styled.div`\r\n  text-align: center;\r\n  margin: 0 10px;\r\n  max-width: 80%;\r\n  \r\n    margin-top: 15px;\r\n    .navlink-dialog {\r\n      text-align: center;\r\n      width: 100%;\r\n      a {\r\n        text-decoration: none;\r\n        outline: none;\r\n        display: inline-block;\r\n        border-radius: 30px;\r\n        padding: 0 10px;\r\n        background-image: linear-gradient(45deg, #6ab1d7 0%, #33d9de 50%, #002878 100%);\r\n        background-position: 100% 0;\r\n        background-size: 200% 200%;\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-size: 24px;\r\n        @media screen and (max-width: 600px) {\r\n          font-size: 12px;\r\n        }\r\n        font-weight: 300;\r\n        color: white;\r\n        box-shadow: 0 16px 32px 0 rgba(0,40,120,.35);\r\n        transition: .5s;\r\n      }\r\n      a:hover {\r\n        box-shadow: 0 0 0 0 rgba(0,40,120,0);\r\n        background-position: 0 0;\r\n      }\r\n    }\r\n  `\r\n}\r\n\r\nexport default UserDialog;","import { connect, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Messeges from \"./UserDialogItems/Masseges/Messeges\";\r\nimport UserDialog from \"./UserDialogItems/UserDialogItems\";\r\nimport { getDialog } from \"../../ReduxStore/reduser/dialogReduser/dialogReduser\";\r\n\r\nconst Dialogs =(props)=>{\r\n\r\n  const dialog = useSelector(state=> state.dialog);\r\n  \r\n  const dialogsElements = dialog.dialogs.map(dial=>(<UserDialog \r\n    name={dial.name}\r\n    userId={dial.userId}\r\n    key={dial.userId}\r\n    getDialog={props.getDialog}\r\n  />))\r\n\r\n  const masseges = dialog.activeUserDialog[0].masseges.map(mes=><Messeges messeg={mes.massege}/>)||null\r\n  console.log(masseges)\r\n  \r\n\r\n  return(\r\n    <S.Dialogs>\r\n      <div className='dialog-user'>\r\n        <div>{dialogsElements}</div>\r\n      </div>\r\n      <div className='dialog-massege'>\r\n        <div>{masseges}</div>\r\n      </div>\r\n    </S.Dialogs>\r\n  )\r\n};\r\n\r\nconst S ={\r\n  Dialogs: styled.div`\r\n  background-color: #fff;\r\n  width:100%;\r\n  display:flex;\r\n  /* flex-direction: column; */\r\n  justify-content: center;\r\n  width: 90%;\r\n  .dialog-user,\r\n  .dialog-massege {\r\n    border-radius: 30px;\r\n    margin: 10px;\r\n    padding: 10px 0 0 0;\r\n    & div {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n  }\r\n  .dialog-user {\r\n    width: 40%;\r\n    background-color: #C9FCFF;\r\n\r\n  }\r\n  .dialog-massege {\r\n    width: 50%;\r\n    background-color: #C9FCFF;\r\n  } \r\n  `\r\n}\r\n\r\nexport default connect(null, {getDialog})(Dialogs);","export default __webpack_public_path__ + \"static/media/user.96e310a6.png\";","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport user from '../../assets/images/user.png'\r\n\r\nconst Logout=(props)=>{\r\n\r\n  const isAuth=useSelector(state=>state.auth.isAuth);\r\n  const login=useSelector(state=>state.auth.login);\r\n  const profileImg = useSelector(state=>state.profile);\r\n  \r\n useEffect(()=>{\r\n }, [isAuth,profileImg])\r\n\r\n if(isAuth && profileImg.profile) {\r\n   return (\r\n    <S.Logout>\r\n      <div>\r\n        <span>{login}</span> \r\n        <img src={profileImg.profile.photos.large||user} alt='user img'/> \r\n        <button onClick={props.logout}>Log out</button> \r\n        </div>\r\n              \r\n  </S.Logout>\r\n   )\r\n } \r\n  return (\r\n    <S.Logout>\r\n      <NavLink to={'/login'}>Login</NavLink>\r\n    </S.Logout>\r\n  )\r\n};\r\n\r\nconst S ={\r\n  Logout: styled.div`\r\n  float: right;\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    span {\r\n      padding-left: 10px;\r\n    }\r\n  }\r\n  & img {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    margin: 0 10px;\r\n  }\r\n  & button {\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    outline: none;\r\n    display: inline-block;\r\n    color: white;\r\n    margin-right: 20px;\r\n    padding: 10px 10px;\r\n    border-radius: 10px;\r\n    font-family: 'Montserrat', sans-serif;\r\n    text-transform: uppercase;\r\n    letter-spacing: 2px;\r\n    background-image: linear-gradient(to right, #9EEFE1 0%, #4830F0 51%, #9EEFE1 100%);\r\n    background-size: 200% auto;\r\n    box-shadow: 0 0 20px rgba(0,0,0,.1);\r\n    transition: .5s\r\n  }\r\n  button:hover {\r\n    background-position: right center;\r\n    }\r\n  `\r\n}\r\n\r\nexport default Logout;","import { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../ReduxStore/reduser/authReduser/authReduser\";\r\nimport {deleteProfile} from '../../ReduxStore/reduser/profileReduser/profileReduser';\r\nimport Logout from \"../Logout/Logout\";\r\n\r\nconst { default: styled } = require(\"styled-components\");\r\n\r\nconst Header =(props)=>{\r\n\r\n  useEffect(()=>{\r\n    return (logout, deleteProfile)\r\n  })\r\n\r\n  return (\r\n    <S.Header >\r\n      <Logout {...props}/>\r\n    </S.Header>\r\n  )\r\n};\r\n\r\nconst S={\r\n  Header: styled.div`\r\n    background-color: #21EBE7;\r\n    margin: 5px;\r\n    width: 100%;\r\n    height:7vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n    div {\r\n      border-radius: 30px;\r\n    }\r\n  `\r\n};\r\n\r\nexport default connect(null,{logout, deleteProfile})(Header);","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NavBlock =(props)=>{\r\n\r\n  return(\r\n    <S.NavBlock>\r\n      <p>Navigation</p>\r\n      <div>\r\n        <div><NavLink to='/profile'>Profile</NavLink></div>\r\n        <div><NavLink to='/users'>Users</NavLink></div>\r\n        <div><NavLink to='/dialogs'>Dialogs</NavLink></div>\r\n        <div><NavLink to='/newsfeed'>News feed</NavLink></div>\r\n      </div>\r\n    </S.NavBlock>\r\n  )\r\n};\r\n\r\nconst S={\r\n  NavBlock: styled.div`\r\n  border-radius: 30px;\r\n  background-color: coral;\r\n  width: 12%;\r\n  height:80vh;\r\n  min-width: 80px;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 10px;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n  & > p {\r\n    font-size: 24px;\r\n    color: #C9FCFF;\r\n    font-weight: bold;\r\n    @media screen and (max-width: 1000px){\r\n      font-weight: lighter;\r\n      font-size: 12px;\r\n    }\r\n  }\r\n  & div > a {\r\n  text-decoration: none;\r\n  outline: none;\r\n  padding: 3px;\r\n  display: inline-block;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border: 2px solid #C9FCFF;\r\n  border-radius: 8px;\r\n  font-family: 'Montserrat', sans-serif; \r\n  color: #C9FCFF;\r\n  transition: .2s ease-in-out;\r\n  @media screen and (max-width: 1000px){\r\n      font-weight: lighter;\r\n      font-size: 12px;\r\n    }\r\n}\r\n& div > a:before {\r\n  content: \"\";\r\n  background: linear-gradient(90deg, rgba(255,255,255,.1), rgba(255,255,255,.5));\r\n  height: 50px;\r\n  width: 50px;\r\n  position: absolute;\r\n  top: -8px;\r\n  left: -75px;\r\n  transform: skewX(-45deg);\r\n}\r\n& div > a:hover {\r\n  background: #9ADDE0;\r\n  color: #fff;\r\n}\r\n& div > a:hover:before {\r\n  left: 150px;\r\n  transition: .5s ease-in-out;\r\n}\r\n  `\r\n}\r\n\r\nexport default NavBlock;","import { useSelector} from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport styled from \"styled-components\";\r\nimport userPhoto from '../../../assets/images/user.png'\r\n\r\nconst Post = (props) => {\r\n  const profile=useSelector(state=>state.profile.profile);\r\n  let images = null\r\n  if(!profile){\r\n    images = userPhoto\r\n  } else {\r\n    images = profile.photos.large\r\n  }\r\n  \r\n  return (\r\n    <S.Wrapper>\r\n      <div className='imgPost'><img src={images} alt='img'/></div>\r\n      <div className='messege-like'>\r\n        <div className='messegePost'><span>{ props.message }</span></div>\r\n        <div className='like-dislike-post'>\r\n          <div className='likePost'>\r\n            <button onClick={()=>{\r\n              props.addLike(props.userId, props.id);\r\n            }}><span>Like</span> </button>\r\n            <span>: { props.likesCount }</span>\r\n          </div>\r\n          <div className='disLikePost'>\r\n            <button onClick={()=>{\r\n              props.addDislike(props.userId, props.id);\r\n            }}><span>Dislike</span> </button>\r\n            <span>: {props.disLikeCount}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {!props.match.params.userId ? (<div className='deletePost'>\r\n        <button onClick={()=>{\r\n          props.deletePost(props.id)\r\n        }}><span>X</span></button>\r\n      </div>): null}\r\n    </S.Wrapper>\r\n  )\r\n};\r\n\r\nconst S ={\r\n  Wrapper: styled.div`\r\n    background-color: #579194;\r\n    color: white;\r\n    margin: 20px 0;\r\n    padding-left: 10px;\r\n    display: grid;\r\n    grid-template-columns: 20% auto 20%;\r\n    .messege-like {\r\n      display: grid;\r\n      grid-template-rows: 60% 40%;\r\n      grid-column: 2;\r\n    }\r\n    .messegePost {\r\n      width:100%;\r\n      grid-row: 1;\r\n      display:flex;\r\n      justify-content:center;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      span {\r\n        display: block;\r\n      }\r\n    }\r\n    .like-dislike-post{\r\n      display: flex;\r\n      justify-content: space-around;\r\n      align-items: center;\r\n      grid-row: 2;\r\n      margin-bottom: 10px;\r\n    }\r\n    .likePost,\r\n    .disLikePost {\r\n      & button:hover {background: rgba(255,255,255,0);}\r\n      & button:hover:before {\r\n        bottom: 0%;\r\n        top: auto;\r\n        height: 100%;\r\n      }\r\n      & button:before {\r\n        content: \"\";\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        height: 0;\r\n        width: 100%;\r\n        z-index: -1;\r\n        color: white;\r\n        background: linear-gradient(180deg, #ff3000, #ed0200, #ff096c, #d50082);\r\n        transition: .8s cubic-bezier(.165,.84,.44,1);\r\n      }\r\n      & button {\r\n        @media screen and (max-width: 650px) {\r\n          letter-spacing: .5px;\r\n        }\r\n        text-decoration: none;\r\n        outline: none;\r\n        color: white;\r\n        display: inline-block;\r\n        position: relative;\r\n        border: 1px solid;\r\n        border-image: linear-gradient(180deg, #ff3000, #ed0200, #ff096c, #d50082);\r\n        border-image-slice: 1;\r\n        font-family: 'Montserrat', sans-serif;\r\n        text-transform: uppercase;\r\n        overflow: hidden;\r\n        letter-spacing: 2px;\r\n        transition: .8s cubic-bezier(.165,.84,.44,1);\r\n          span {\r\n            @media screen and (max-width: 650px) {\r\n              font-size: 9px;\r\n              width: 50px;\r\n              height: 20px;\r\n            }\r\n          width: 100%;\r\n          height: 100%;\r\n          color: red;\r\n          font-size: 18px;\r\n        }\r\n      } \r\n    }\r\n    .deletePost {\r\n      display: flex;\r\n      grid-column: 3;\r\n      justify-content: center;\r\n      align-items: center;\r\n      max-width: 100%;\r\n      button {\r\n        @media screen and (max-width: 650px){\r\n          width: 30px;\r\n          height: 30px;\r\n        }\r\n        text-decoration: none;\r\n        outline: none;\r\n        display: inline-block;\r\n        width: 60px;\r\n        height: 45px;\r\n        line-height: 45px;\r\n        border-radius: 45px;\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-size: 11px;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        letter-spacing: 3px;\r\n        font-weight: 600;\r\n        color: #524f4e;\r\n        background: white;\r\n        box-shadow: 0 8px 15px rgba(0,0,0,.1);\r\n        transition: .3s;\r\n        position: relative;\r\n        span {\r\n          @media screen and (max-width: 650px) {\r\n            bottom: -35%;\r\n            left: 39%;\r\n          }\r\n          display: block;\r\n          position: absolute;\r\n          bottom: -5%;\r\n          left: 43%;\r\n        }\r\n      }\r\n      button:hover {\r\n        background: #2EE59D;\r\n        box-shadow: 0 15px 20px rgba(46,229,157,.4);\r\n        color: white;\r\n        transform: translateY(-7px);\r\n      }\r\n    }\r\n    .imgPost {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      grid-column: 1;\r\n      height: 100%;\r\n      max-height: 150px;\r\n      border-radius: 40px;\r\n      & img {\r\n        @media screen and (max-width: 650px) {\r\n          width: 50px;\r\n        }\r\n        display: block;\r\n        border-radius: 50%;\r\n        max-width: 100px;\r\n        width: auto;\r\n        height: auto;\r\n      }\r\n    }\r\n  `\r\n}\r\n\r\nexport default compose(withRouter)(Post);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { reduxForm } from \"redux-form\";\r\nimport styled from 'styled-components';\r\nimport { createField, Textarea } from \"../../../common/FormControl/FormControl\";\r\nimport { maxLengthCreator, required } from \"../../../utilit/validators/validators\";\r\nimport Post from './Post';\r\n\r\nconst maxLength10 = maxLengthCreator(9);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n      {createField(\"Post message\",\"newPostText\", [required, maxLength10], Textarea )}\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.userPosts]\r\n            .reverse()\r\n            .map(p => <Post \r\n              key={p.id} \r\n              message={p.message} \r\n              likesCount={p.likesCount}\r\n              disLikeCount={p.disLikesCount} \r\n              id={p.id} \r\n              deletePost={props.deletePost}\r\n              addLike={props.addLike}\r\n              addDislike={props.addDislike}\r\n              userId={props.userId}\r\n              />);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n    \r\n    if (props.match.params.userId ) {\r\n        return (\r\n            <S.Post>\r\n                <h3>My posts</h3>\r\n                <div className='my-post'>\r\n                    {postsElements}\r\n                </div>\r\n            </S.Post>\r\n        )\r\n    }\r\n    return (\r\n        <S.Post>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className='my-post'>\r\n                {postsElements}\r\n            </div>\r\n        </S.Post>\r\n    )\r\n});\r\n\r\nconst S={\r\n  Post: styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: #C9FCFF;\r\n  .my-post {\r\n    @media screen and (max-width: 650px) {\r\n        width: 95%;\r\n    }\r\n      width: 80%;\r\n    & >  div {\r\n        @media screen and (max-width: 650px) {\r\n            height: 150px;\r\n        }\r\n        border-radius: 20px;\r\n    } \r\n  }\r\n  form {\r\n      width: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      div {\r\n          width: 100%;\r\n          margin: 5px 5px;\r\n          text-align: center;\r\n          textarea {\r\n            @media screen and (max-width: 650px) {\r\n                height: 100px;\r\n                margin-right: 15px;\r\n            }\r\n            width: 90%;\r\n            max-width: 100%;\r\n            max-height: 200px;\r\n            }\r\n          button {\r\n            text-decoration: none;\r\n            outline: none;\r\n            display: inline-block;\r\n            padding: 15px 30px;\r\n            margin: 10px 20px;\r\n            border-radius: 10px;\r\n            box-shadow: 0 0 40px 40px #F137A6 inset, 0 0 0 0 #F137A6;\r\n            font-family: 'Montserrat', sans-serif;\r\n            font-weight: bold;\r\n            letter-spacing: 2px;\r\n            color: white;\r\n            transition: .15s ease-in-out;\r\n            }\r\n            button:hover {\r\n            box-shadow: 0 0 10px 0 #F137A6 inset, 0 0 10px 4px #F137A6;\r\n            color: #F137A6;\r\n            }\r\n      }\r\n  }\r\n  `\r\n}\r\nexport default compose(withRouter, connect(null, null))(MyPosts);","\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { addPost, deletePost, addLike, addDislike } from '../../../ReduxStore/reduser/postReduser/userPostsReduser/postReduser';\r\n\r\nconst MyPostsContainer =(props)=>{\r\n\r\n  const userPosts = useSelector(state=> state.userPosts.userPosts);\r\n  const userId = useSelector(state=> state.userPosts.userId);\r\n  \r\n  return (\r\n    <>\r\n      <MyPosts {...props} \r\n      userPosts={userPosts}\r\n      userId={userId}\r\n      userPhoto={props.userPhoto}\r\n      />\r\n    </>\r\n  )\r\n};\r\n\r\nexport default compose(withRouter,\r\n  connect(null,{ addPost, deletePost, addLike, addDislike }))(MyPostsContainer);","import {createField, Input, Textarea} from '../../../common/FormControl/FormControl';\r\nimport { reduxForm } from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n  return <form onSubmit={handleSubmit}>\r\n      <div><button>save</button></div>\r\n      {error && <div>\r\n          {error}\r\n      </div>\r\n      }\r\n      <div>\r\n          <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n      </div>\r\n      <div>\r\n          <b>Looking for a job</b>: { createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"} )}\r\n      </div>\r\n\r\n      <div>\r\n          <b>My professional skills</b>:\r\n          { createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea  )}\r\n      </div>\r\n\r\n\r\n      <div>\r\n          <b>About me</b>:\r\n          { createField(\"About me\", \"aboutMe\", [], Textarea  )}\r\n      </div>\r\n      <div>\r\n          <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n          return <div key={key}>\r\n          <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n          </div>\r\n      })}\r\n      </div>\r\n  </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <b>Status: </b> <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport ProfileDataForm from \"../ProfileDataForm/ProfileDataForm\";\r\nimport ProfileStatus from \"../ProfileStatus/ProfileStatus\";\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\n\r\nconst ProfileInfo =({profile, status, updateStatus, isOwner, savePhoto, saveProfile})=>{\r\n\r\nconst [editMode, setEditMode] = useState(false);\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n        savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\nconst onSubmit = (formData) => {\r\n    saveProfile(formData).then(\r\n        () => {\r\n            setEditMode(false);\r\n        }\r\n    );\r\n}\r\n\r\nif(!profile){\r\n  return <Preloader/>\r\n}\r\n\r\n  return (<>\r\n    <S.ProfileContainer>\r\n      <S.Porfile>\r\n          <S.UserImg src={profile.photos.large || userPhoto}/>\r\n          {isOwner && <div>\r\n            \r\n          <button><input type={\"file\"} onChange={onMainPhotoSelected}/>Сменить фото</button>\r\n          </div>}\r\n\r\n          <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n      </S.Porfile>\r\n      <S.ProfileInfo>\r\n        <div>\r\n          { editMode\r\n              ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n              : <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner}/> }\r\n        </div>\r\n      </S.ProfileInfo>\r\n    </S.ProfileContainer>\r\n  </>\r\n  )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n  return <>\r\n      <div>\r\n          <b>Full name</b>: {profile.fullName }\r\n      </div>\r\n      <div>\r\n          <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {profile.lookingForAJob &&\r\n      <div>\r\n          <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n      </div>\r\n      }\r\n\r\n      <div>\r\n          <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n          <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n      })}\r\n      </div>\r\n      {isOwner && <div className='button'><button onClick={goToEditMode}>Edit</button></div>}\r\n  </>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return <div><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\n\r\nconst S={\r\n  ProfileContainer: styled.div`\r\n  display: flex;\r\n  margin: 10px;\r\n  border-radius: 20px;\r\n  @media screen and (max-width: 830px) {\r\n    display: block;\r\n  }\r\n  `,\r\n  Porfile: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    min-width: 28%;\r\n    margin: 10px;\r\n    background-color: #B6F5E8;\r\n    border-radius: 20px;\r\n    div {\r\n      position: relative;\r\n      \r\n      margin: 10px 10px;\r\n    }\r\n    div > button {\r\n      width: 100%;\r\n      height: 100%;\r\n      text-decoration: none;\r\n      outline: none;\r\n      display: inline-block;\r\n      border-radius: 30px;\r\n      background-image: linear-gradient(45deg, #6ab1d7 0%, #33d9de 50%, #002878 100%);\r\n      background-position: 100% 0;\r\n      background-size: 200% 200%;\r\n      font-family: 'Montserrat', sans-serif;\r\n      font-size: 14px;\r\n      font-weight: 300;\r\n      color: white;\r\n      box-shadow: 0 16px 32px 0 rgba(0,40,120,.35);\r\n      transition: .5s;\r\n      position: relative;\r\n      padding: 15px 60px;\r\n    }\r\n    div > button:hover {\r\n      box-shadow: 0 0 0 0 rgba(0,40,120,0);\r\n      background-position: 0 0;\r\n    }\r\n    div > button > input {\r\n      margin: 0;\r\n      padding: 0;\r\n      left: 0;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      opacity: 0;\r\n      cursor: pointer;\r\n      position: absolute;\r\n      border-radius: 30px;\r\n    }\r\n    \r\n  `,\r\n  ProfileInfo: styled.div`\r\n    @media screen and (max-width: 830px) {\r\n      width: 97%;\r\n    }\r\n    display:flex;\r\n    flex-direction: column;\r\n    width: 68%;\r\n    align-items: center;\r\n    margin: 10px;\r\n    background-color: #B6F5E8;\r\n    border-radius: 20px;\r\n    & div {\r\n      @media screen and (max-width: 830px) {\r\n      width: 97%;\r\n    }\r\n      width: 50%;\r\n      margin: 10px 5px;\r\n      div {\r\n          width: 95%;\r\n        }\r\n      b {\r\n        width: 100%;\r\n        \r\n      }\r\n      \r\n    }\r\n    .button {\r\n      text-align: center;\r\n      button {\r\n        text-decoration: none;\r\n        outline: none;\r\n        display: inline-block;\r\n        padding: 15px 15px;\r\n        margin: 10px 10px;\r\n        border-radius: 10px;\r\n        box-shadow: 0 0 40px 40px #F137A6 inset, 0 0 0 0 #F137A6;\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-weight: bold;\r\n        letter-spacing: 2px;\r\n        color: white;\r\n        transition: .15s ease-in-out;\r\n        width: 100px;\r\n      }\r\n      button:hover {\r\n        box-shadow: 0 0 10px 0 #F137A6 inset, 0 0 10px 4px #F137A6;\r\n        color: #F137A6;\r\n      }\r\n    }\r\n  `,\r\n  UserImg: styled.img`\r\n  margin: 5px auto;\r\n    width:200px;\r\n    border-radius: 20px;\r\n  `\r\n}\r\n\r\nexport default ProfileInfo;","import MyPostsContainer from \"./MyPostContainer/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props)=>{\r\n  \r\n  return (\r\n    <div>\r\n      <ProfileInfo savePhoto={props.savePhoto}\r\n                    isOwner={props.isOwner}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    saveProfile={props.saveProfile}\r\n                    updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default Profile;","import { connect, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from '../../ReduxStore/reduser/profileReduser/profileReduser';\r\nimport styled from \"styled-components\";\r\nimport Profile from \"./Profile\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileContainer =(props)=>{\r\n\r\n  const status=useSelector(state=>state.profile.status);\r\n  const authorizedUserId=useSelector(state=>state.auth.userId);\r\n  const profile=useSelector(state=>state.profile.profile);\r\n\r\n  const refreshProfile = () => {\r\n    let userId = props.match.params.userId;\r\n    if (!userId) {\r\n        userId = authorizedUserId;\r\n        if (!userId) {\r\n            props.history.push(\"/login\");\r\n        }\r\n    }\r\n    props.getUserProfile(userId);\r\n    props.getStatus(userId);\r\n}\r\n\r\nuseEffect(()=>{\r\n  refreshProfile();\r\n},[])\r\n\r\n  return (\r\n    <S.ProfileContainer>\r\n        <Profile {...props}  isOwner={!props.match.params.userId}\r\n                     profile={profile}\r\n                     status={status}\r\n                     updateStatus={props.updateStatus}\r\n                     savePhoto={props.savePhoto}/>\r\n\r\n    </S.ProfileContainer>\r\n  )\r\n};\r\n\r\nconst S ={\r\n  ProfileContainer: styled.div`\r\n  background-color: #fff;\r\n  width:100%;\r\n  `\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(null, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n  withRouter\r\n)(ProfileContainer);\r\n","\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <S.Swrapper>\n        { portionNumber > 1 &&\n        <button className='paginator-pages-prev' onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                return <button className='paginator-pages-button'\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</button>\n            })}\n        { portionCount > portionNumber &&\n            <button  className='paginator-pages-next' onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </S.Swrapper>\n}\n\nconst S = {\n    Swrapper: styled.div`\n        .paginator-pages-button {\n            cursor: pointer;\n            text-decoration: none;\n            outline: none;\n            color: black;\n            display: inline-block;\n            position: relative;\n            border: 1px solid;\n            border-image: linear-gradient(180deg, #ff3000, #ed0200, #ff096c, #d50082);\n            border-image-slice: 1;\n            font-family: 'Montserrat', sans-serif;\n            text-transform: uppercase;\n            overflow: hidden;\n            letter-spacing: 2px;\n            transition: .8s cubic-bezier(.165,.84,.44,1);\n        }\n        .paginator-pages-button:before {\n            content: \"\";\n            position: absolute;\n            left: 0;\n            top: 0;\n            height: 0;\n            width: 100%;\n            z-index: -1;\n            color: white;\n            background: linear-gradient(180deg, #ff3000, #ed0200, #ff096c, #d50082);\n            transition: .8s cubic-bezier(.165,.84,.44,1);\n            }\n        .paginator-pages-button:hover {background: rgba(255,255,255,0);}\n        .paginator-pages-button:hover:before {\n        bottom: 0%;\n        top: auto;\n        height: 100%;\n        }\n\n        .paginator-pages-prev,\n        .paginator-pages-next {\n            cursor: pointer;\n            text-decoration: none;\n            outline: none;\n            display: inline-block;\n            margin: 10px 10px;\n            border-radius: 10px;\n            box-shadow: 0 0 40px 40px #F137A6 inset, 0 0 0 0 #F137A6;\n            font-family: 'Montserrat', sans-serif;\n            font-weight: bold;\n            letter-spacing: 2px;\n            color: white;\n            transition: .15s ease-in-out;\n        }\n        .paginator-pages-prev:hover,\n        .paginator-pages-next:hover {\n            box-shadow: 0 0 10px 0 #F137A6 inset, 0 0 10px 4px #F137A6;\n            color: #F137A6;\n}\n    `\n}\n\n\nexport default Paginator;","import React from 'react';\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow, getUserProfile}) => {\r\n    return (\r\n       <S.User>\r\n          <div className='header-user'>\r\n              <div>\r\n                  <NavLink to={'/profile/' + user.id} onClick={()=>{\r\n                      getUserProfile(user.id);\r\n                  }}>\r\n                  <img src={user.photos.small != null ? user.photos.small : userPhoto} alt='avatarIMG'\r\n                        />\r\n                  </NavLink>\r\n              </div>\r\n              <div className='followed'>\r\n                  {user.followed\r\n                      ? <button disabled={followingInProgress\r\n                          .some(id => id === user.id)}\r\n                                onClick={() => { unfollow(user.id) }}>\r\n                          Unfollow</button>\r\n                      : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                onClick={() => { follow(user.id) }}>\r\n                                Follow</button>}\r\n\r\n              </div>\r\n          </div>\r\n          <div className='info-user'>\r\n              <div>\r\n                <div><span>Name :</span><span> {user.name}</span></div>\r\n                <div>{user.status}</div>\r\n            </div>\r\n            <div>\r\n                <div>{'user.location.country'}</div>\r\n                <div>{'user.location.city'}</div>\r\n            </div>\r\n          </div>\r\n      </S.User>)\r\n}\r\n\r\nconst S ={\r\n  User: styled.div`\r\n  @media screen and (max-width: 750px) {\r\n      width: 45%;\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n      width: 90%;\r\n  }\r\n    padding-bottom: 20px;\r\n    width: 30%;\r\n    height: 200px;\r\n    margin: 10px 0;\r\n    border:2px solid red;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 30px;\r\n    background-color: #18F5EC;\r\n    .followed > button {\r\n        cursor: pointer;\r\n        text-decoration: none;\r\n        outline: none;\r\n        display: inline-block;\r\n        padding: 5px 10px;\r\n        position: relative;\r\n        overflow: hidden;\r\n        border: 2px solid #fe6637;\r\n        border-radius: 8px;\r\n        font-family: 'Montserrat', sans-serif; \r\n        color: #fe6637;\r\n        transition: .2s ease-in-out;\r\n    }\r\n    .followed > button:before {\r\n        content: \"\";\r\n        background: linear-gradient(90deg, rgba(255,255,255,.1), rgba(255,255,255,.5));\r\n        height: 50px;\r\n        width: 50px;\r\n        position: absolute;\r\n        top: -8px;\r\n        left: -75px;\r\n        transform: skewX(-45deg);\r\n        }\r\n    .followed > button:hover {\r\n        background: #fe6637;\r\n        color: #fff;\r\n    }\r\n    .followed > button:hover:before {\r\n        left: 150px;\r\n        transition: .5s ease-in-out;\r\n    }\r\n  .info-user {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      & div {\r\n          div {\r\n            display: flex;\r\n            justify-content: start;\r\n        }\r\n      }\r\n  }\r\n  .header-user {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content:center;\r\n    align-items: center;\r\n  }\r\n  & img {\r\n    width: 100px;\r\n  }\r\n  `\r\n}\r\n\r\nexport default User;","import styled from \"styled-components\";\r\nimport Paginator from '../../common/Paginator/Paginator'\r\nimport User from \"./User/User\";\r\n\r\n\r\nconst Users =({currentPage, totalUsersCount, pageSize, onPageChanged, users, getUserProfile, ...props})=>{\r\n  return (\r\n    <S.Users>\r\n      <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <S.User>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                                     getUserProfile={getUserProfile}\r\n                    />\r\n                )\r\n            }\r\n        </S.User>\r\n      \r\n    </S.Users>\r\n  )\r\n};\r\n\r\nconst S ={\r\n  Users: styled.div`\r\n  background-color: #fff;\r\n  width:100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  `,\r\n  User: styled.div`\r\n  display:flex;\r\n  flex-wrap:wrap;\r\n  justify-content: space-around;\r\n  width:100%;\r\n  `\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.followingInProgress;\r\n};\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n};","import { connect, useSelector } from \"react-redux\";\r\nimport Users from \"../Users\";\r\nimport {getUserProfile} from '../../../ReduxStore/reduser/profileReduser/profileReduser';\r\nimport {\r\n  follow,\r\n  unfollow, \r\n  requestUsers\r\n} from '../../../ReduxStore/reduser/usersRedusers/usersRedusers';\r\nimport {  toggleFollowingProgress, setCurrentPage } from '../../../ReduxStore/reduser/usersRedusers/action/action';\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount, \r\n  getUsers\r\n} from '../../../Selectors/usersSelectors';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst UserContainer =(props)=>{\r\n\r\n  const state = useSelector(state=>state.users)\r\n\r\n  const users= getUsers(state);\r\n  const pageSize= getPageSize(state);\r\n  const totalUsersCount= getTotalUsersCount(state);\r\n  const currentPage= getCurrentPage(state);\r\n  const isFetching=getIsFetching(state);\r\n  const followingInProgress=getFollowingInProgress(state);\r\n\r\n  const onPageChanged = (pageNumber) => {\r\n    const {pageSize} = props;\r\n    props.getUsers(pageNumber, pageSize);\r\n}\r\n\r\nuseEffect(()=>{\r\n    props.getUsers(currentPage, pageSize);\r\n},[])\r\n\r\n  return(\r\n    <div>\r\n      {isFetching ? <Preloader/> : null}\r\n      <Users totalUsersCount={totalUsersCount}\r\n                   pageSize={pageSize}\r\n                   currentPage={currentPage}\r\n                   onPageChanged={onPageChanged}\r\n                   users={users}\r\n                   follow={props.follow}\r\n                   unfollow={props.unfollow}\r\n                   followingInProgress={followingInProgress}\r\n                   getUserProfile={props.getUserProfile}\r\n                   />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default connect(null, {follow, getUserProfile, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})(UserContainer);","import { compose } from \"redux\";\r\nimport styled from \"styled-components\";\r\nimport Dialogs from \"../Dialogs/Dialogs\";\r\nimport Header from \"../Header/Header\";\r\nimport NavBlock from \"../NavBlock/NavBlock\";\r\nimport ProfileContainer from \"../Profile/ProfileContainer\";\r\nimport UserContainer from \"../Users/UsersContainer/UsersContainer\";\r\n\r\nconst { Switch, Route, Redirect, withRouter } = require(\"react-router-dom\");\r\n\r\nconst Body=(props)=>{\r\n  \r\n  if (props.location.pathname==='/') {\r\n    return <Redirect to='/profile'/>\r\n  }\r\n\r\n  return (<>\r\n    <S.Header>\r\n      <Header/>\r\n      <S.Body>\r\n        <NavBlock/>\r\n        <Switch>\r\n          <Route exact path='/profile/:userId?' render={()=><ProfileContainer />}/>\r\n          <Route path='/users' render={()=><UserContainer/>}/>\r\n          <Route path='/dialogs/:userId?' render={()=><Dialogs/>}/>\r\n        </Switch>\r\n      </S.Body>\r\n    </S.Header>\r\n    </>\r\n  )\r\n};\r\n\r\nconst S={\r\n  Body: styled.div`\r\n  display: flex;\r\n  background-color: #fff;\r\n  `,\r\n  Header: styled.div`\r\n  background-color: #fff;\r\n  & > div {\r\n    border-radius: 30px;\r\n  }\r\n    \r\n  `\r\n}\r\n\r\nexport default compose(withRouter)(Body);","export const SEND_MESSAGE = 'SEND_MESSAGE';\r\nexport const GET_DIAlOG = 'GET_DIAlOG';","import { GET_DIAlOG } from \"./constans/constans\";\r\nimport {getUserDialog} from './action/action';\r\n\r\nconst defaultState={\r\nactiveUserDialog: [{masseges:[]}],\r\ndialogs: [\r\n  {userId: 1, name: 'Yra', masseges: [\r\n    {id: 1, massege: 'Hi' },\r\n    {id: 2, massege: 'Y am GURU' },\r\n    {id: 3, massege: 'Your' },\r\n    {id: 4, massege: 'Tehno' }\r\n    ]\r\n  },\r\n  {userId: 2, name: 'Helen', masseges: [\r\n    {id: 1, massege: 'Hi' },\r\n    {id: 2, massege: 'Y am Genza' },\r\n    {id: 3, massege: 'Your' },\r\n    {id: 4, massege: 'Tehno' },\r\n  ]\r\n},\r\n  {userId: 3, name: 'Genadiy', masseges: [\r\n    {id: 1, massege: 'Hi' },\r\n    {id: 2, massege: 'Y am Gearsim' },\r\n    {id: 3, massege: 'Your' },\r\n    {id: 4, massege: 'Tehno' },\r\n  ]\r\n},\r\n  {userId: 4, name: 'Gerasim', masseges: [\r\n    {id: 1, massege: 'Hi' },\r\n    {id: 2, massege: 'Y am Lida' },\r\n    {id: 3, massege: 'Your' },\r\n    {id: 4, massege: 'Tehno' },\r\n  ]\r\n  },\r\n],\r\n};\r\n\r\nconst dialogReduser=(state = defaultState, action)=>{\r\n  switch (action.type) {\r\n    case GET_DIAlOG:\r\n      return {\r\n        ...state,\r\n        activeUserDialog: state.dialogs.filter(dial=>dial.userId===action.userId)\r\n      }\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getDialog = (userId)=>(dispatch)=>{\r\n  return dispatch(getUserDialog(userId))};\r\n\r\n\r\nexport default dialogReduser;","import { GET_DIAlOG } from \"../constans/constans\";\r\n\r\nexport const getUserDialog =(userId)=>({type: GET_DIAlOG, userId});"],"sourceRoot":""}